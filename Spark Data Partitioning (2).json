{"paragraphs":[{"text":"%md\n# Spark Data Partitioning\n\nWelcome to the notebook with the exercises for the fifth session. You’re halfway on the path to obtain the Wizeline Certification for Big Data Engineering with Spark!\nIf you have any feedback about our courses, email us at academy@wizeline.com or use the Academy Slack channel.\n \nIn this notebook you will be doing four exercises aimed at:\n - Looking at the data distribution of the partitions stored in your cluster.\n - Use different partitioning approaches to understand which is the best approach.\n - Understand the impact of the partitioning on the I/O functions.\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Spark Data Partitioning</h1>\n<p>Welcome to the notebook with the exercises for the fifth session. You’re halfway on the path to obtain the Wizeline Certification for Big Data Engineering with Spark!<br/>If you have any feedback about our courses, email us at <a href=\"mailto:a&#x63;&#97;&#x64;&#x65;&#109;&#121;@&#x77;&#x69;z&#101;&#x6c;&#x69;&#110;&#101;&#46;&#99;&#111;&#x6d;\">a&#x63;&#97;&#x64;&#x65;&#109;&#121;@&#x77;&#x69;z&#101;&#x6c;&#x69;&#110;&#101;&#46;&#99;&#111;&#x6d;</a> or use the Academy Slack channel.</p>\n<p>In this notebook you will be doing four exercises aimed at:<br/> - Looking at the data distribution of the partitions stored in your cluster.<br/> - Use different partitioning approaches to understand which is the best approach.<br/> - Understand the impact of the partitioning on the I/O functions.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216807_-45620865","id":"20180824-154704_999864938","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:289"},{"title":"","text":"%md\n# Exercise 1- Partitions and data distribution\n\nIn this exercise, you will look at the the data contained in different partitions. Pay attention to how the data is distributed between the partitions depending on how they are created.\n\nYou are expected to use the DataSet sample `transactions`, which contains monetary transactions for users in the world.\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"title":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 1- Partitions and data distribution</h1>\n<p>In this exercise, you will look at the the data contained in different partitions. Pay attention to how the data is distributed between the partitions depending on how they are created.</p>\n<p>You are expected to use the DataSet sample <code>transactions</code>, which contains monetary transactions for users in the world.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216818_-37541138","id":"20180824-160322_654860629","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:290"},{"text":"%pyspark\n\nTransactionSchema = ['name', 'amount', 'country']\n\ntransactions = [\n    ('Bob', 100, 'United Kingdom'),\n    ('James', 15, 'United Kingdom'),\n    ('Marek', 51, 'Poland'),\n    ('Johannes', 200, 'Germany'),\n    ('Paul', 75, 'Poland'),\n    ('Bob', 35, 'Mexico'),\n    ('James', 21, 'Germany')\n]\n\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535665216819_-37925887","id":"20180824-160727_1105840180","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:291"},{"text":"case class Transactions(name:String, amount:Long, country:String)\n\nval transactions = List(\n    Transactions(\"Bob\", 25, \"MX\"),\n    Transactions(\"James\", 15, \"United Kingdom\"),\n    Transactions(\"Marek\", 51, \"Poland\"),\n    Transactions(\"Johannes\", 200,\"Germany\"),\n    Transactions(\"Paul\", 75, \"Poland\"),\n    Transactions(\"Bob\", 35, \"Mexico\"),\n    Transactions(\"James\", 21, \"Germany\")\n)","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216825_-41773376","id":"20180827-172331_1658203493","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:292"},{"text":"%md\n\nThe following code snippet creates a data frame and outputs you the number of partitions, partitioner and partition structure.\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The following code snippet creates a data frame and outputs you the number of partitions, partitioner and partition structure.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216825_-41773376","id":"20180824-161222_1775895785","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:293"},{"text":"%pyspark\nfrom pyspark.sql import SparkSession, Row\n    \ndf = spark.createDataFrame(transactions, TransactionSchema)\n\nprint(\"Number of partitions: {}\".format(df.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(df.rdd.partitioner))\nprint(\"Partitions structure: {}\".format(df.rdd.glom().collect()))","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Number of partitions: 3\nPartitioner: None\nPartitions structure: [[Row(name=u'Bob', amount=100, country=u'United Kingdom'), Row(name=u'James', amount=15, country=u'United Kingdom')], [Row(name=u'Marek', amount=51, country=u'Poland'), Row(name=u'Johannes', amount=200, country=u'Germany')], [Row(name=u'Paul', amount=75, country=u'Poland'), Row(name=u'Bob', amount=35, country=u'Mexico'), Row(name=u'James', amount=21, country=u'Germany')]]\n"}]},"apps":[],"jobName":"paragraph_1535665216826_-40619129","id":"20180824-161021_1826354548","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:294"},{"text":"import org.apache.spark.sql.Row\n\n\nval df = spark.createDataFrame(transactions)\n\ndf.rdd.getNumPartitions\ndf.rdd.partitioner\ndf.rdd.glom().collect()\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216826_-40619129","id":"20180827-182233_1620123781","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:295"},{"text":"%md\nLook at the output and answer the following questions:\n    - Names on partition 1\n    bob, James,\n    \n    - Amounts on partition 2\n    MArek\n    Johanes\n    Paul\n    Bob\n    James\n    \n    - Why is the partitioned `None`?\n    no hya un metodo predefinido\n    \n\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Look at the output and answer the following questions:<br/> - Names on partition 1<br/> - Amounts on partition 2<br/> - Why is the partitioned <code>None</code>?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216826_-40619129","id":"20180824-161209_564012877","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:296"},{"text":"%md\n**REPARTITIONING:** The following code repartitions the original DataFrame and outputs the same information. ","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong>REPARTITIONING:</strong> The following code repartitions the original DataFrame and outputs the same information.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216829_-43312371","id":"20180824-161118_605198725","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:297"},{"text":"%pyspark\ndf2 = df.repartition(\"country\")\n    \nprint(\"\\nAfter 'repartition()'\")\nprint(\"Number of partitions: {}\".format(df2.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(df2.rdd.partitioner))\nprint(\"Partitions structure: {}\".format(df2.rdd.glom().collect()))","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAfter 'repartition()'\nNumber of partitions: 200\nPartitioner: None\nPartitions structure: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'Johannes', amount=200, country=u'Germany'), Row(name=u'James', amount=21, country=u'Germany')], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'Bob', amount=35, country=u'Mexico')], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'Marek', amount=51, country=u'Poland'), Row(name=u'Paul', amount=75, country=u'Poland')], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'Bob', amount=100, country=u'United Kingdom'), Row(name=u'James', amount=15, country=u'United Kingdom')], [], [], [], []]\n"}]},"apps":[],"jobName":"paragraph_1535665216829_-43312371","id":"20180824-161919_1765365187","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:298"},{"text":"val df2 = df.repartition($\"country\")\n\ndf2.rdd.getNumPartitions\ndf2.rdd.partitioner\ndf2.rdd.glom().collect()","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{"0":{"graph":{"mode":"table","height":125,"optionOpen":false}}},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216831_-42542873","id":"20180827-191139_22040351","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:299"},{"text":"%md\nLook at the output and answer the following questions:\n - Amounts on partition 1\n 200\n - Names on partition 2\n -\n - What is the main difference?\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Look at the output and answer the following questions:<br/> - Amounts on partition 1<br/> - Names on partition 2<br/> - What is the main difference?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216831_-42542873","id":"20180824-161944_2121074393","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:300"},{"text":"%md\nRemember more partitions != uniform partition distribution. So more partitions is not necessarily the answer, in fact if you end up having too many partitions you may bump into a problem with very small files.","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Remember more partitions != uniform partition distribution. So more partitions is not necessarily the answer, in fact if you end up having too many partitions you may bump into a problem with very small files.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216832_-56778583","id":"20180824-163234_318434487","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:301"},{"text":"%md\n# Exercise 2 - Partitioning approaches\n\nUsing the same dataset, create new datasets, try partitioning using each one of the columns. This means you will end with 4 distinct datasets.\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 2 - Partitioning approaches</h1>\n<p>Using the same dataset, create new datasets, try partitioning using each one of the columns. This means you will end with 4 distinct datasets.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216833_-57163332","id":"20180824-163253_580541449","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:302"},{"text":"%pyspark\ndf2 = df.repartition(\"name\")\n    \nprint(\"\\nAfter 'repartition()' with column 'name'\")\nprint(\"Number of partitions: {}\".format(df2.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(df2.rdd.partitioner))\nprint(\"Partitions structure: {}\".format(df2.rdd.glom().collect()))\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAfter 'repartition()' with column 'name'\nNumber of partitions: 200\nPartitioner: None\nPartitions structure: [[], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'James', amount=15, country=u'United Kingdom'), Row(name=u'James', amount=21, country=u'Germany')], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'Bob', amount=100, country=u'United Kingdom'), Row(name=u'Bob', amount=35, country=u'Mexico')], [], [], [Row(name=u'Marek', amount=51, country=u'Poland')], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'Johannes', amount=200, country=u'Germany')], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [Row(name=u'Paul', amount=75, country=u'Poland')], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]\n"}]},"apps":[],"jobName":"paragraph_1535665216835_-56393834","id":"20180824-163321_450981945","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:303"},{"text":"val df2 = df.repartition($\"name\")\n\ndf2.rdd.getNumPartitions\ndf2.rdd.partitioner\ndf2.rdd.glom().collect()\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216835_-56393834","id":"20180827-192209_233833264","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:304"},{"text":"%md\nAfter printing the number of partitions, partitioner and partitions structure, answer the following question: \n - In this case, what is the best approach?\n - it wil ldepende\n - How can you determine that?\n    the main purose of the transfoormation","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>After printing the number of partitions, partitioner and partitions structure, answer the following question:<br/> - In this case, what is the best approach?<br/> - How can you determine that?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216835_-56393834","id":"20180824-163507_1092132855","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:305"},{"text":"%md\nAs you can see, the repartitioning has a direct effect on the distribution of the information, using the correct column is essential. For knowing the most appropriate column, you need to be familiar with the data, there is no workaround. ","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>As you can see, the repartitioning has a direct effect on the distribution of the information, using the correct column is essential. For knowing the most appropriate column, you need to be familiar with the data, there is no workaround.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216835_-56393834","id":"20180824-163550_767573207","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:306"},{"text":"%md\n# Exercise 3 - I/O with single and multiple files\n\nNow, look at reading and writing. You already know this is a costly operation. Regardless, there are strategies for troubleshooting or improving the reading and writing performance. This exercise requires you to Read and Write a DataSet in a single file and multiple files to compare performance.\n\nQuestion: How do you determine the best approach?\nNote: unless you control what is being written, you can only make recommendations on the file sizes for you to read later. If you are given one big block then your fate is sealed.\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 3 - I/O with single and multiple files</h1>\n<p>Now, look at reading and writing. You already know this is a costly operation. Regardless, there are strategies for troubleshooting or improving the reading and writing performance. This exercise requires you to Read and Write a DataSet in a single file and multiple files to compare performance.</p>\n<p>Question: How do you determine the best approach?<br/>Note: unless you control what is being written, you can only make recommendations on the file sizes for you to read later. If you are given one big block then your fate is sealed.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216836_-58317578","id":"20180824-163615_1064210426","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:307"},{"text":"%md First let's read the data. The dataset is quite big, so let's take a small sample instead:","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>First let&rsquo;s read the data. The dataset is quite big, so let&rsquo;s take a small sample instead:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216836_-58317578","id":"20180827-165943_350742125","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:308"},{"text":"%pyspark\ndf = spark.read.json(\"gs://de-training-input/alimazon/50000/client-orders/*.gz\") \\\n    .sample(False, 0.2)  # take 20% of the data without replacement\ndf.count()","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"13365\n"}]},"apps":[],"jobName":"paragraph_1535665216836_-58317578","id":"20180827-172725_2084099563","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:309"},{"text":"val df = spark.read.json(\"gs://de-training-input/alimazon/50000/client-orders/*.gz\")\n    .sample(false, 0.2) // take 20% of the data without replacement\ndf.count()","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216836_-58317578","id":"20180827-170048_1570856632","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:310"},{"text":"%md **`NOTE:`** Do not forget to set you username here","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><code>NOTE:</code></strong> Do not forget to set you username here</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216837_-58702327","id":"20180827-171324_1624649057","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:311"},{"text":"%pyspark\nusername = \"topifloresl\"","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535665216837_-58702327","id":"20180827-173600_941913882","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:312"},{"text":"val username = \"<user-name>\"","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216837_-58702327","id":"20180827-171640_353868380","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:313"},{"text":"%md Let's write our data using different partitions.\nConfirm in GCP that the dataset was written in the number of specified partitions.","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Let&rsquo;s write our data using different partitions.<br/>Confirm in GCP that the dataset was written in the number of specified partitions.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216837_-58702327","id":"20180827-170049_2139323805","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:314"},{"text":"%pyspark\ndf.repartition(1).write.mode('overwrite').json(\"gs://de-training-output-{}/client-orders-1part/\".format(username))\n\ndf.repartition(6).write.mode('overwrite').json(\"gs://de-training-output-{}/client-orders-6part/\".format(username))","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535665216840_-59856574","id":"20180827-171201_1462543897","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:315"},{"text":"df.repartition(1).write.json(s\"gs://de-training-output-$username/client-orders-1part/\")\ndf.repartition(6).write.json(s\"gs://de-training-output-$username/client-orders-6part/\")\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216840_-59856574","id":"20180827-173626_223417974","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:316"},{"text":"%md Let's experiment a bit more reading and writing using different numbers of partitions:","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Let&rsquo;s experiment a bit more reading and writing using different numbers of partitions:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216841_-60241323","id":"20180827-192903_1248488032","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:317"},{"text":"%md Here is the example for reading from one file and writing to one file","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Here is the example for reading from one file and writing to one file</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216842_-59087076","id":"20180827-171740_251328243","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:318"},{"text":"%pyspark\ndf1 = sqlContext.read.json(\"gs://de-training-output-{}/client-orders-1part/\".format(username))\ndf1.repartition(1).write.mode('overwrite').csv(\"gs://de-training-output-{}/client-orders-1in-1out/\".format(username))\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535665216842_-59087076","id":"20180827-173824_1583828117","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:319"},{"text":"val df1 = spark.read.json(s\"gs://de-training-output-$username/client-orders-1part/\")\ndf1.repartition(1).write.csv(s\"gs://de-training-output-$username/client-orders-1in-1out/\")","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216842_-59087076","id":"20180827-171820_27449283","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:320"},{"text":"%md Here is the example for reading from multiple files and writing to multiple files","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Here is the example for reading from multiple files and writing to multiple files</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216842_-59087076","id":"20180827-171903_233529514","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:321"},{"text":"%pyspark\ndf6 = sqlContext.read.json(\"gs://de-training-output-{}/client-orders-6part/\".format(username))\ndf6.repartition(6).write.mode('overwrite').csv(\"gs://de-training-output-{}/client-orders-6in-6out/\".format(username))","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535665216842_-59087076","id":"20180827-174103_2146116059","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:322"},{"text":"val df6 = spark.read.json(s\"gs://de-training-output-$username/client-orders-6part/\")\ndf6.repartition(6).write.csv(s\"gs://de-training-output-$username/client-orders-6in-6out/\")","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216843_-59471825","id":"20180827-172046_737696731","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:323"},{"text":"%md Explore using different number of partitions, reading from 1 file and writing to 4","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Explore using different number of partitions, reading from 1 file and writing to 4</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216844_-61395569","id":"20180827-172131_750013194","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:324"},{"text":"%pyspark\ndf6 = sqlContext.read.json(\"gs://de-training-output-{}/client-orders-1part/\".format(username))\ndf6.repartition(4).write.mode('overwrite').csv(\"gs://de-training-output-{}/client-orders-1in-4out/\".format(username))\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535665216844_-61395569","id":"20180828-013348_1148935396","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:325"},{"text":"%md\n# Exercise 4 - Flights dataset partitions size\n\nThe next code help you to display the size of each partition, we are going to generate a sample dataset\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 4 - Flights dataset partitions size</h1>\n<p>The next code help you to display the size of each partition, we are going to generate a sample dataset</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216845_-61780318","id":"20180824-163816_107227786","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:326"},{"text":"%pyspark\nfrom itertools import chain\nfrom pyspark.sql import Row\n\nsample_dataset = spark.createDataFrame(chain([(i, 0) for i in range(1, 100001)], [(i, j) for i in range(1, 101) for j in range(1, 101)])).cache()\nprint(sample_dataset.rdd.getNumPartitions())\npartitions = sample_dataset.rdd.mapPartitions(lambda part: [Row(value=len(list(part)))])\nspark.createDataFrame(partitions).show()","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"3\n+-----+\n|value|\n+-----+\n|36864|\n|36864|\n|36272|\n+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1535665216846_-60626072","id":"20180827-174300_1370563640","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:327"},{"text":"val sampleDataSet = ((1 to 100000).map((_,0))++(1 to 100).flatMap(i => (1 to 100).map((_,i)))).toDS.cache\nprintln(sampleDataSet.rdd.getNumPartitions)\nval partitions = sampleDataSet.mapPartitions(iter => Seq(iter.size).iterator)\npartitions.show()","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216846_-60626072","id":"20180824-163856_1912329826","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:328"},{"text":"%md\nNow, using your acquired knowledge of former sessions, load the flights DataSet and display the size of the partitions\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Now, using your acquired knowledge of former sessions, load the flights DataSet and display the size of the partitions</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216846_-60626072","id":"20180824-163919_2039405814","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:329"},{"text":"%pyspark\n\nflg = sqlContext.read.csv(\"gs://de-training-input/flight-data/*.csv\")\nflg.show()\n\n    \nprint(\"Number of partitions: {}\".format(flg.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(flg.rdd.partitioner))\nprint(\"Partitions structure: {}\".format(flg.rdd.glom().collect()))\n\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-------------------+-----+\n|                 _c0|                _c1|  _c2|\n+--------------------+-------------------+-----+\n|   DEST_COUNTRY_NAME|ORIGIN_COUNTRY_NAME|count|\n|       United States|            Romania|    1|\n|       United States|            Ireland|  264|\n|       United States|              India|   69|\n|               Egypt|      United States|   24|\n|   Equatorial Guinea|      United States|    1|\n|       United States|          Singapore|   25|\n|       United States|            Grenada|   54|\n|          Costa Rica|      United States|  477|\n|             Senegal|      United States|   29|\n|       United States|   Marshall Islands|   44|\n|              Guyana|      United States|   17|\n|       United States|       Sint Maarten|   53|\n|               Malta|      United States|    1|\n|             Bolivia|      United States|   46|\n|            Anguilla|      United States|   21|\n|Turks and Caicos ...|      United States|  136|\n|       United States|        Afghanistan|    2|\n|Saint Vincent and...|      United States|    1|\n|               Italy|      United States|  390|\n+--------------------+-------------------+-----+\nonly showing top 20 rows\n\nNumber of partitions: 3\nPartitioner: None\nPartitions structure: [[Row(_c0=u'DEST_COUNTRY_NAME', _c1=u'ORIGIN_COUNTRY_NAME', _c2=u'count'), Row(_c0=u'United States', _c1=u'Romania', _c2=u'1'), Row(_c0=u'United States', _c1=u'Ireland', _c2=u'264'), Row(_c0=u'United States', _c1=u'India', _c2=u'69'), Row(_c0=u'Egypt', _c1=u'United States', _c2=u'24'), Row(_c0=u'Equatorial Guinea', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Singapore', _c2=u'25'), Row(_c0=u'United States', _c1=u'Grenada', _c2=u'54'), Row(_c0=u'Costa Rica', _c1=u'United States', _c2=u'477'), Row(_c0=u'Senegal', _c1=u'United States', _c2=u'29'), Row(_c0=u'United States', _c1=u'Marshall Islands', _c2=u'44'), Row(_c0=u'Guyana', _c1=u'United States', _c2=u'17'), Row(_c0=u'United States', _c1=u'Sint Maarten', _c2=u'53'), Row(_c0=u'Malta', _c1=u'United States', _c2=u'1'), Row(_c0=u'Bolivia', _c1=u'United States', _c2=u'46'), Row(_c0=u'Anguilla', _c1=u'United States', _c2=u'21'), Row(_c0=u'Turks and Caicos Islands', _c1=u'United States', _c2=u'136'), Row(_c0=u'United States', _c1=u'Afghanistan', _c2=u'2'), Row(_c0=u'Saint Vincent and the Grenadines', _c1=u'United States', _c2=u'1'), Row(_c0=u'Italy', _c1=u'United States', _c2=u'390'), Row(_c0=u'United States', _c1=u'Russia', _c2=u'156'), Row(_c0=u'United States', _c1=u'Federated States of Micronesia', _c2=u'48'), Row(_c0=u'Pakistan', _c1=u'United States', _c2=u'9'), Row(_c0=u'United States', _c1=u'Netherlands', _c2=u'570'), Row(_c0=u'Iceland', _c1=u'United States', _c2=u'118'), Row(_c0=u'Marshall Islands', _c1=u'United States', _c2=u'77'), Row(_c0=u'Luxembourg', _c1=u'United States', _c2=u'91'), Row(_c0=u'Honduras', _c1=u'United States', _c2=u'391'), Row(_c0=u'The Bahamas', _c1=u'United States', _c2=u'903'), Row(_c0=u'El Salvador', _c1=u'United States', _c2=u'519'), Row(_c0=u'United States', _c1=u'Senegal', _c2=u'46'), Row(_c0=u'Samoa', _c1=u'United States', _c2=u'28'), Row(_c0=u'United States', _c1=u'Angola', _c2=u'18'), Row(_c0=u'Kazakhstan', _c1=u'United States', _c2=u'3'), Row(_c0=u'Switzerland', _c1=u'United States', _c2=u'315'), Row(_c0=u'United States', _c1=u'Anguilla', _c2=u'20'), Row(_c0=u'Sint Maarten', _c1=u'United States', _c2=u'61'), Row(_c0=u'Hong Kong', _c1=u'United States', _c2=u'252'), Row(_c0=u'Trinidad and Tobago', _c1=u'United States', _c2=u'187'), Row(_c0=u'Latvia', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Ecuador', _c2=u'345'), Row(_c0=u'Slovakia', _c1=u'United States', _c2=u'1'), Row(_c0=u'Suriname', _c1=u'United States', _c2=u'12'), Row(_c0=u'Mexico', _c1=u'United States', _c2=u'6200'), Row(_c0=u'United States', _c1=u'Cyprus', _c2=u'1'), Row(_c0=u'Ecuador', _c1=u'United States', _c2=u'272'), Row(_c0=u'United States', _c1=u'Bosnia and Herzegovina', _c2=u'1'), Row(_c0=u'United States', _c1=u'Portugal', _c2=u'104'), Row(_c0=u'United States', _c1=u'Costa Rica', _c2=u'501'), Row(_c0=u'United States', _c1=u'Guatemala', _c2=u'333'), Row(_c0=u'United States', _c1=u'Suriname', _c2=u'13'), Row(_c0=u'Colombia', _c1=u'United States', _c2=u'785'), Row(_c0=u'United States', _c1=u'Cape Verde', _c2=u'18'), Row(_c0=u'United States', _c1=u'Jamaica', _c2=u'757'), Row(_c0=u'United States', _c1=u'Malaysia', _c2=u'3'), Row(_c0=u'Norway', _c1=u'United States', _c2=u'29'), Row(_c0=u'United States', _c1=u'Morocco', _c2=u'16'), Row(_c0=u'Thailand', _c1=u'United States', _c2=u'16'), Row(_c0=u'Venezuela', _c1=u'United States', _c2=u'377'), Row(_c0=u'United States', _c1=u'Palau', _c2=u'30'), Row(_c0=u'United States', _c1=u'Samoa', _c2=u'28'), Row(_c0=u'United States', _c1=u'Algeria', _c2=u'1'), Row(_c0=u'United States', _c1=u'Venezuela', _c2=u'341'), Row(_c0=u'Panama', _c1=u'United States', _c2=u'355'), Row(_c0=u'United States', _c1=u'Finland', _c2=u'20'), Row(_c0=u'United States', _c1=u'Chile', _c2=u'176'), Row(_c0=u'Morocco', _c1=u'United States', _c2=u'16'), Row(_c0=u'United States', _c1=u'Greece', _c2=u'61'), Row(_c0=u'Antigua and Barbuda', _c1=u'United States', _c2=u'123'), Row(_c0=u'Azerbaijan', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'The Bahamas', _c2=u'959'), Row(_c0=u'New Zealand', _c1=u'United States', _c2=u'86'), Row(_c0=u'Liberia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Hong Kong', _c2=u'293'), Row(_c0=u'Hungary', _c1=u'United States', _c2=u'14'), Row(_c0=u'United States', _c1=u'China', _c2=u'505'), Row(_c0=u'United States', _c1=u'Vietnam', _c2=u'1'), Row(_c0=u'Sweden', _c1=u'United States', _c2=u'65'), Row(_c0=u'United States', _c1=u'Kuwait', _c2=u'25'), Row(_c0=u'United States', _c1=u'Dominican Republic', _c2=u'1150'), Row(_c0=u'United States', _c1=u'Egypt', _c2=u'25'), Row(_c0=u'Israel', _c1=u'United States', _c2=u'117'), Row(_c0=u'United States', _c1=u'United States', _c2=u'348113'), Row(_c0=u'United States', _c1=u'Luxembourg', _c2=u'90'), Row(_c0=u'Ethiopia', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Poland', _c2=u'61'), Row(_c0=u'Martinique', _c1=u'United States', _c2=u'23'), Row(_c0=u'Saint Barthelemy', _c1=u'United States', _c2=u'28'), Row(_c0=u'United States', _c1=u'Saint Barthelemy', _c2=u'29'), Row(_c0=u'United States', _c1=u'Turkey', _c2=u'87'), Row(_c0=u'Barbados', _c1=u'United States', _c2=u'130'), Row(_c0=u'United States', _c1=u'Estonia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Azerbaijan', _c2=u'1'), Row(_c0=u'Germany', _c1=u'United States', _c2=u'1392'), Row(_c0=u'Kyrgyzstan', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'South Korea', _c2=u'621'), Row(_c0=u'United States', _c1=u'El Salvador', _c2=u'464'), Row(_c0=u'Ireland', _c1=u'United States', _c2=u'231'), Row(_c0=u'United States', _c1=u'Hungary', _c2=u'15'), Row(_c0=u'United States', _c1=u'Serbia', _c2=u'1'), Row(_c0=u'Malaysia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Panama', _c2=u'363'), Row(_c0=u'United States', _c1=u'Ethiopia', _c2=u'12'), Row(_c0=u'United States', _c1=u'Aruba', _c2=u'349'), Row(_c0=u'United States', _c1=u'Thailand', _c2=u'13'), Row(_c0=u'United States', _c1=u'Netherlands Antilles', _c2=u'289'), Row(_c0=u'United States', _c1=u'Turks and Caicos Islands', _c2=u'147'), Row(_c0=u'Cyprus', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Pakistan', _c2=u'15'), Row(_c0=u'United States', _c1=u'Honduras', _c2=u'393'), Row(_c0=u'Qatar', _c1=u'United States', _c2=u'41'), Row(_c0=u'Fiji', _c1=u'United States', _c2=u'53'), Row(_c0=u'Saint Kitts and Nevis', _c1=u'United States', _c2=u'113'), Row(_c0=u'Taiwan', _c1=u'United States', _c2=u'275'), Row(_c0=u'Haiti', _c1=u'United States', _c2=u'238'), Row(_c0=u'Kuwait', _c1=u'United States', _c2=u'26'), Row(_c0=u'Canada', _c1=u'United States', _c2=u'8271'), Row(_c0=u'Federated States of Micronesia', _c1=u'United States', _c2=u'46'), Row(_c0=u'United States', _c1=u'Liberia', _c2=u'1'), Row(_c0=u'Jamaica', _c1=u'United States', _c2=u'733'), Row(_c0=u'United States', _c1=u'Malta', _c2=u'2'), Row(_c0=u'Dominican Republic', _c1=u'United States', _c2=u'1109'), Row(_c0=u'Japan', _c1=u'United States', _c2=u'1383'), Row(_c0=u'United States', _c1=u'Saint Vincent and the Grenadines', _c2=u'16'), Row(_c0=u'United States', _c1=u'Guadeloupe', _c2=u'33'), Row(_c0=u'Finland', _c1=u'United States', _c2=u'24'), Row(_c0=u'United States', _c1=u'Ukraine', _c2=u'17'), Row(_c0=u'United States', _c1=u'France', _c2=u'776'), Row(_c0=u'United States', _c1=u'Norway', _c2=u'36'), Row(_c0=u'Aruba', _c1=u'United States', _c2=u'359'), Row(_c0=u'French Guiana', _c1=u'United States', _c2=u'4'), Row(_c0=u'United States', _c1=u'Kiribati', _c2=u'18'), Row(_c0=u'India', _c1=u'United States', _c2=u'66'), Row(_c0=u'British Virgin Islands', _c1=u'United States', _c2=u'49'), Row(_c0=u'United States', _c1=u'Germany', _c2=u'1406'), Row(_c0=u'Brazil', _c1=u'United States', _c2=u'995'), Row(_c0=u'United States', _c1=u'New Zealand', _c2=u'71'), Row(_c0=u'French Polynesia', _c1=u'United States', _c2=u'38'), Row(_c0=u'United Arab Emirates', _c1=u'United States', _c2=u'165'), Row(_c0=u'Singapore', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Mexico', _c2=u'6220'), Row(_c0=u'Netherlands', _c1=u'United States', _c2=u'586'), Row(_c0=u'United States', _c1=u'Sweden', _c2=u'73'), Row(_c0=u'United States', _c1=u'Gabon', _c2=u'1'), Row(_c0=u'United States', _c1=u'Martinique', _c2=u'20'), Row(_c0=u'United States', _c1=u'United Arab Emirates', _c2=u'156'), Row(_c0=u'United States', _c1=u'Bulgaria', _c2=u'2'), Row(_c0=u'China', _c1=u'United States', _c2=u'448'), Row(_c0=u'Denmark', _c1=u'United States', _c2=u'98'), Row(_c0=u'United States', _c1=u'Philippines', _c2=u'116'), Row(_c0=u'United States', _c1=u'Nicaragua', _c2=u'181'), Row(_c0=u'United States', _c1=u'Belgium', _c2=u'355'), Row(_c0=u'Peru', _c1=u'United States', _c2=u'212'), Row(_c0=u'Argentina', _c1=u'United States', _c2=u'184'), Row(_c0=u'Cayman Islands', _c1=u'United States', _c2=u'247'), Row(_c0=u'South Africa', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Iceland', _c2=u'129'), Row(_c0=u'United States', _c1=u'Argentina', _c2=u'159'), Row(_c0=u'Spain', _c1=u'United States', _c2=u'422'), Row(_c0=u'Netherlands Antilles', _c1=u'United States', _c2=u'286'), Row(_c0=u'Bermuda', _c1=u'United States', _c2=u'183'), Row(_c0=u'United States', _c1=u'Austria', _c2=u'34'), Row(_c0=u'United States', _c1=u'Nigeria', _c2=u'18'), Row(_c0=u'United States', _c1=u'Bonaire, Sint Eustatius, and Saba', _c2=u'16'), Row(_c0=u'Kiribati', _c1=u'United States', _c2=u'17'), Row(_c0=u'Saudi Arabia', _c1=u'United States', _c2=u'42'), Row(_c0=u'Czech Republic', _c1=u'United States', _c2=u'21'), Row(_c0=u'Belgium', _c1=u'United States', _c2=u'408'), Row(_c0=u'United States', _c1=u'Israel', _c2=u'122'), Row(_c0=u'United States', _c1=u'Bahrain', _c2=u'1'), Row(_c0=u'United States', _c1=u'Saint Lucia', _c2=u'121'), Row(_c0=u'Afghanistan', _c1=u'United States', _c2=u'11'), Row(_c0=u'United States', _c1=u'British Virgin Islands', _c2=u'47'), Row(_c0=u'Curacao', _c1=u'United States', _c2=u'20'), Row(_c0=u'Georgia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Guyana', _c2=u'20'), Row(_c0=u'United States', _c1=u'Denmark', _c2=u'107'), Row(_c0=u'Philippines', _c1=u'United States', _c2=u'132'), Row(_c0=u'Grenada', _c1=u'United States', _c2=u'65'), Row(_c0=u'Cape Verde', _c1=u'United States', _c2=u'18'), Row(_c0=u'Ukraine', _c1=u'United States', _c2=u'19'), Row(_c0=u'United States', _c1=u'Papua New Guinea', _c2=u'1'), Row(_c0=u'United States', _c1=u'Saudi Arabia', _c2=u'54'), Row(_c0=u'Russia', _c1=u'United States', _c2=u'152'), Row(_c0=u'Guatemala', _c1=u'United States', _c2=u'386'), Row(_c0=u'Saint Lucia', _c1=u'United States', _c2=u'116'), Row(_c0=u'Paraguay', _c1=u'United States', _c2=u'90'), Row(_c0=u'United States', _c1=u'Curacao', _c2=u'14'), Row(_c0=u'United States', _c1=u'Taiwan', _c2=u'252'), Row(_c0=u'United States', _c1=u'South Africa', _c2=u'15'), Row(_c0=u'Turkey', _c1=u'United States', _c2=u'75'), Row(_c0=u'United Kingdom', _c1=u'United States', _c2=u'1629'), Row(_c0=u'United States', _c1=u'Greenland', _c2=u'2'), Row(_c0=u'United States', _c1=u'Spain', _c2=u'442'), Row(_c0=u'Cuba', _c1=u'United States', _c2=u'243'), Row(_c0=u'United States', _c1=u'Italy', _c2=u'433'), Row(_c0=u'United States', _c1=u'Switzerland', _c2=u'334'), Row(_c0=u'Dominica', _c1=u'United States', _c2=u'28'), Row(_c0=u'United States', _c1=u'Japan', _c2=u'1307'), Row(_c0=u'Portugal', _c1=u'United States', _c2=u'102'), Row(_c0=u'United States', _c1=u'Brazil', _c2=u'578'), Row(_c0=u'Bahrain', _c1=u'United States', _c2=u'30'), Row(_c0=u'United States', _c1=u'Peru', _c2=u'284'), Row(_c0=u'Vietnam', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'United Kingdom', _c2=u'1503'), Row(_c0=u'United States', _c1=u'Belize', _c2=u'118'), Row(_c0=u'Belize', _c1=u'United States', _c2=u'121'), Row(_c0=u'United States', _c1=u'Ghana', _c2=u'28'), Row(_c0=u'United States', _c1=u'Indonesia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Fiji', _c2=u'51'), Row(_c0=u'United States', _c1=u'Canada', _c2=u'8305'), Row(_c0=u'United States', _c1=u'French Polynesia', _c2=u'38'), Row(_c0=u'United States', _c1=u'Antigua and Barbuda', _c2=u'121'), Row(_c0=u'United States', _c1=u'Burkina Faso', _c2=u'1'), Row(_c0=u'Nicaragua', _c1=u'United States', _c2=u'178'), Row(_c0=u'United States', _c1=u'Latvia', _c2=u'13'), Row(_c0=u'United States', _c1=u'Dominica', _c2=u'32'), Row(_c0=u'United States', _c1=u'Czech Republic', _c2=u'22'), Row(_c0=u'United States', _c1=u'Australia', _c2=u'216'), Row(_c0=u'Austria', _c1=u'United States', _c2=u'36'), Row(_c0=u'United States', _c1=u'Cook Islands', _c2=u'12'), Row(_c0=u'Jordan', _c1=u'United States', _c2=u'50'), Row(_c0=u'Palau', _c1=u'United States', _c2=u'31'), Row(_c0=u'Uganda', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Cameroon', _c2=u'1'), Row(_c0=u'South Korea', _c1=u'United States', _c2=u'683'), Row(_c0=u'Angola', _c1=u'United States', _c2=u'14'), Row(_c0=u'Ghana', _c1=u'United States', _c2=u'27'), Row(_c0=u'Guadeloupe', _c1=u'United States', _c2=u'40'), Row(_c0=u'France', _c1=u'United States', _c2=u'774'), Row(_c0=u'United States', _c1=u'Kyrgyzstan', _c2=u'12'), Row(_c0=u'Poland', _c1=u'United States', _c2=u'62'), Row(_c0=u'Nigeria', _c1=u'United States', _c2=u'16'), Row(_c0=u'United States', _c1=u'Uruguay', _c2=u'24'), Row(_c0=u'Greenland', _c1=u'United States', _c2=u'2'), Row(_c0=u'Chile', _c1=u'United States', _c2=u'166'), Row(_c0=u'United States', _c1=u'Bermuda', _c2=u'180'), Row(_c0=u'United States', _c1=u'Cuba', _c2=u'235'), Row(_c0=u'United States', _c1=u'Colombia', _c2=u'832'), Row(_c0=u'United States', _c1=u'Qatar', _c2=u'40'), Row(_c0=u'United States', _c1=u'Barbados', _c2=u'119'), Row(_c0=u'Australia', _c1=u'United States', _c2=u'290'), Row(_c0=u'United States', _c1=u'Jordan', _c2=u'51'), Row(_c0=u'United States', _c1=u'Cayman Islands', _c2=u'251'), Row(_c0=u'United States', _c1=u'Trinidad and Tobago', _c2=u'200'), Row(_c0=u'United States', _c1=u'Bolivia', _c2=u'39'), Row(_c0=u'United States', _c1=u'Slovakia', _c2=u'1'), Row(_c0=u'Uruguay', _c1=u'United States', _c2=u'54'), Row(_c0=u'Cook Islands', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'Saint Kitts and Nevis', _c2=u'127'), Row(_c0=u'Bulgaria', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'French Guiana', _c2=u'1'), Row(_c0=u'United States', _c1=u'Haiti', _c2=u'226'), Row(_c0=u'United States', _c1=u'Uganda', _c2=u'1'), Row(_c0=u'Bonaire, Sint Eustatius, and Saba', _c1=u'United States', _c2=u'16'), Row(_c0=u'Greece', _c1=u'United States', _c2=u'50'), Row(_c0=u'DEST_COUNTRY_NAME', _c1=u'ORIGIN_COUNTRY_NAME', _c2=u'count'), Row(_c0=u'United States', _c1=u'Romania', _c2=u'15'), Row(_c0=u'United States', _c1=u'Croatia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Ireland', _c2=u'344'), Row(_c0=u'Egypt', _c1=u'United States', _c2=u'15'), Row(_c0=u'United States', _c1=u'India', _c2=u'62'), Row(_c0=u'United States', _c1=u'Singapore', _c2=u'1'), Row(_c0=u'United States', _c1=u'Grenada', _c2=u'62'), Row(_c0=u'Costa Rica', _c1=u'United States', _c2=u'588'), Row(_c0=u'Senegal', _c1=u'United States', _c2=u'40'), Row(_c0=u'Moldova', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Sint Maarten', _c2=u'325'), Row(_c0=u'United States', _c1=u'Marshall Islands', _c2=u'39'), Row(_c0=u'Guyana', _c1=u'United States', _c2=u'64'), Row(_c0=u'Malta', _c1=u'United States', _c2=u'1'), Row(_c0=u'Anguilla', _c1=u'United States', _c2=u'41'), Row(_c0=u'Bolivia', _c1=u'United States', _c2=u'30'), Row(_c0=u'United States', _c1=u'Paraguay', _c2=u'6'), Row(_c0=u'Algeria', _c1=u'United States', _c2=u'4'), Row(_c0=u'Turks and Caicos Islands', _c1=u'United States', _c2=u'230'), Row(_c0=u'United States', _c1=u'Gibraltar', _c2=u'1'), Row(_c0=u'Saint Vincent and the Grenadines', _c1=u'United States', _c2=u'1'), Row(_c0=u'Italy', _c1=u'United States', _c2=u'382'), Row(_c0=u'United States', _c1=u'Federated States of Micronesia', _c2=u'69'), Row(_c0=u'United States', _c1=u'Russia', _c2=u'161'), Row(_c0=u'Pakistan', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Netherlands', _c2=u'660'), Row(_c0=u'Iceland', _c1=u'United States', _c2=u'181'), Row(_c0=u'Marshall Islands', _c1=u'United States', _c2=u'42'), Row(_c0=u'Luxembourg', _c1=u'United States', _c2=u'155'), Row(_c0=u'Honduras', _c1=u'United States', _c2=u'362'), Row(_c0=u'The Bahamas', _c1=u'United States', _c2=u'955'), Row(_c0=u'United States', _c1=u'Senegal', _c2=u'42'), Row(_c0=u'El Salvador', _c1=u'United States', _c2=u'561'), Row(_c0=u'Samoa', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Angola', _c2=u'13'), Row(_c0=u'Switzerland', _c1=u'United States', _c2=u'294'), Row(_c0=u'United States', _c1=u'Anguilla', _c2=u'38'), Row(_c0=u'Sint Maarten', _c1=u'United States', _c2=u'325'), Row(_c0=u'Hong Kong', _c1=u'United States', _c2=u'332'), Row(_c0=u'Trinidad and Tobago', _c1=u'United States', _c2=u'211'), Row(_c0=u'Latvia', _c1=u'United States', _c2=u'19'), Row(_c0=u'United States', _c1=u'Ecuador', _c2=u'300'), Row(_c0=u'Suriname', _c1=u'United States', _c2=u'1'), Row(_c0=u'Mexico', _c1=u'United States', _c2=u'7140'), Row(_c0=u'United States', _c1=u'Cyprus', _c2=u'1'), Row(_c0=u'Ecuador', _c1=u'United States', _c2=u'268'), Row(_c0=u'United States', _c1=u'Portugal', _c2=u'134'), Row(_c0=u'United States', _c1=u'Costa Rica', _c2=u'608'), Row(_c0=u'United States', _c1=u'Guatemala', _c2=u'318'), Row(_c0=u'United States', _c1=u'Suriname', _c2=u'34'), Row(_c0=u'Colombia', _c1=u'United States', _c2=u'873'), Row(_c0=u'United States', _c1=u'Cape Verde', _c2=u'14'), Row(_c0=u'United States', _c1=u'Jamaica', _c2=u'712'), Row(_c0=u'Norway', _c1=u'United States', _c2=u'121'), Row(_c0=u'United States', _c1=u'Malaysia', _c2=u'3'), Row(_c0=u'United States', _c1=u'Morocco', _c2=u'19'), Row(_c0=u'Thailand', _c1=u'United States', _c2=u'3'), Row(_c0=u'United States', _c1=u'Samoa', _c2=u'25'), Row(_c0=u'Venezuela', _c1=u'United States', _c2=u'290'), Row(_c0=u'United States', _c1=u'Palau', _c2=u'31'), Row(_c0=u'United States', _c1=u'Venezuela', _c2=u'246'), Row(_c0=u'Panama', _c1=u'United States', _c2=u'510'), Row(_c0=u'Antigua and Barbuda', _c1=u'United States', _c2=u'126'), Row(_c0=u'United States', _c1=u'Chile', _c2=u'185'), Row(_c0=u'Morocco', _c1=u'United States', _c2=u'15'), Row(_c0=u'United States', _c1=u'Finland', _c2=u'28'), Row(_c0=u'Azerbaijan', _c1=u'United States', _c2=u'21'), Row(_c0=u'United States', _c1=u'Greece', _c2=u'23'), Row(_c0=u'United States', _c1=u'The Bahamas', _c2=u'986'), Row(_c0=u'New Zealand', _c1=u'United States', _c2=u'111'), Row(_c0=u'Liberia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Hong Kong', _c2=u'414'), Row(_c0=u'Hungary', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'China', _c2=u'920'), Row(_c0=u'United States', _c1=u'Vietnam', _c2=u'2'), Row(_c0=u'Burkina Faso', _c1=u'United States', _c2=u'1'), Row(_c0=u'Sweden', _c1=u'United States', _c2=u'118'), Row(_c0=u'United States', _c1=u'Kuwait', _c2=u'28'), Row(_c0=u'United States', _c1=u'Dominican Republic', _c2=u'1420'), Row(_c0=u'United States', _c1=u'Egypt', _c2=u'12'), Row(_c0=u'Israel', _c1=u'United States', _c2=u'134'), Row(_c0=u'United States', _c1=u'United States', _c2=u'370002'), Row(_c0=u'Ethiopia', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'Luxembourg', _c2=u'134'), Row(_c0=u'United States', _c1=u'Poland', _c2=u'33'), Row(_c0=u'Martinique', _c1=u'United States', _c2=u'44'), Row(_c0=u'United States', _c1=u'Saint Barthelemy', _c2=u'41'), Row(_c0=u'Saint Barthelemy', _c1=u'United States', _c2=u'39'), Row(_c0=u'Barbados', _c1=u'United States', _c2=u'154'), Row(_c0=u'United States', _c1=u'Turkey', _c2=u'129'), Row(_c0=u'Djibouti', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Azerbaijan', _c2=u'21'), Row(_c0=u'United States', _c1=u'Estonia', _c2=u'1'), Row(_c0=u'Germany', _c1=u'United States', _c2=u'1468'), Row(_c0=u'United States', _c1=u'South Korea', _c2=u'827'), Row(_c0=u'United States', _c1=u'El Salvador', _c2=u'508'), Row(_c0=u'Ireland', _c1=u'United States', _c2=u'335'), Row(_c0=u'United States', _c1=u'Hungary', _c2=u'3'), Row(_c0=u'Zambia', _c1=u'United States', _c2=u'1'), Row(_c0=u'Malaysia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Ethiopia', _c2=u'12'), Row(_c0=u'United States', _c1=u'Panama', _c2=u'465'), Row(_c0=u'United States', _c1=u'Aruba', _c2=u'342'), Row(_c0=u'United States', _c1=u'Thailand', _c2=u'4'), Row(_c0=u'United States', _c1=u'Turks and Caicos Islands', _c2=u'236'), Row(_c0=u'Croatia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Pakistan', _c2=u'12'), Row(_c0=u'Cyprus', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Honduras', _c2=u'407'), Row(_c0=u'Fiji', _c1=u'United States', _c2=u'24'), Row(_c0=u'Qatar', _c1=u'United States', _c2=u'108'), Row(_c0=u'Saint Kitts and Nevis', _c1=u'United States', _c2=u'139'), Row(_c0=u'Kuwait', _c1=u'United States', _c2=u'32'), Row(_c0=u'Taiwan', _c1=u'United States', _c2=u'266'), Row(_c0=u'Haiti', _c1=u'United States', _c2=u'226'), Row(_c0=u'Canada', _c1=u'United States', _c2=u'8399'), Row(_c0=u'Federated States of Micronesia', _c1=u'United States', _c2=u'69'), Row(_c0=u'United States', _c1=u'Liberia', _c2=u'2'), Row(_c0=u'Jamaica', _c1=u'United States', _c2=u'666'), Row(_c0=u'United States', _c1=u'Malta', _c2=u'2'), Row(_c0=u'Dominican Republic', _c1=u'United States', _c2=u'1353'), Row(_c0=u'Japan', _c1=u'United States', _c2=u'1548'), Row(_c0=u'United States', _c1=u'Lithuania', _c2=u'1'), Row(_c0=u'Finland', _c1=u'United States', _c2=u'26'), Row(_c0=u'United States', _c1=u'Guadeloupe', _c2=u'59'), Row(_c0=u'United States', _c1=u'Ukraine', _c2=u'13'), Row(_c0=u'United States', _c1=u'France', _c2=u'952'), Row(_c0=u'United States', _c1=u'Norway', _c2=u'115'), Row(_c0=u'Aruba', _c1=u'United States', _c2=u'346'), Row(_c0=u'French Guiana', _c1=u'United States', _c2=u'5'), Row(_c0=u'United States', _c1=u'Kiribati', _c2=u'35'), Row(_c0=u'India', _c1=u'United States', _c2=u'61'), Row(_c0=u'British Virgin Islands', _c1=u'United States', _c2=u'107'), Row(_c0=u'Brazil', _c1=u'United States', _c2=u'853'), Row(_c0=u'United States', _c1=u'Germany', _c2=u'1336'), Row(_c0=u'United States', _c1=u'New Zealand', _c2=u'74'), Row(_c0=u'French Polynesia', _c1=u'United States', _c2=u'43'), Row(_c0=u'United Arab Emirates', _c1=u'United States', _c2=u'320'), Row(_c0=u'Singapore', _c1=u'United States', _c2=u'3'), Row(_c0=u'United States', _c1=u'Mexico', _c2=u'7187'), Row(_c0=u'United States', _c1=u'Sweden', _c2=u'119'), Row(_c0=u'Netherlands', _c1=u'United States', _c2=u'776'), Row(_c0=u'United States', _c1=u'Martinique', _c2=u'43'), Row(_c0=u'United States', _c1=u'United Arab Emirates', _c2=u'313'), Row(_c0=u'United States', _c1=u'Bulgaria', _c2=u'1'), Row(_c0=u'Denmark', _c1=u'United States', _c2=u'153'), Row(_c0=u'China', _c1=u'United States', _c2=u'772'), Row(_c0=u'United States', _c1=u'Nicaragua', _c2=u'201'), Row(_c0=u'United States', _c1=u'Philippines', _c2=u'126'), Row(_c0=u'United States', _c1=u'Georgia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Belgium', _c2=u'228'), Row(_c0=u'Cayman Islands', _c1=u'United States', _c2=u'314'), Row(_c0=u'Argentina', _c1=u'United States', _c2=u'180'), Row(_c0=u'Peru', _c1=u'United States', _c2=u'279'), Row(_c0=u'South Africa', _c1=u'United States', _c2=u'36'), Row(_c0=u'United States', _c1=u'Iceland', _c2=u'202'), Row(_c0=u'United States', _c1=u'Argentina', _c2=u'141'), Row(_c0=u'Spain', _c1=u'United States', _c2=u'420'), Row(_c0=u'Bermuda', _c1=u'United States', _c2=u'183'), Row(_c0=u'United States', _c1=u'Nigeria', _c2=u'50'), Row(_c0=u'United States', _c1=u'Austria', _c2=u'63'), Row(_c0=u'United States', _c1=u'Bonaire, Sint Eustatius, and Saba', _c2=u'59'), Row(_c0=u'Kiribati', _c1=u'United States', _c2=u'26'), Row(_c0=u'Saudi Arabia', _c1=u'United States', _c2=u'83'), Row(_c0=u'Czech Republic', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'Israel', _c2=u'127'), Row(_c0=u'Belgium', _c1=u'United States', _c2=u'259'), Row(_c0=u'United States', _c1=u'Saint Lucia', _c2=u'136'), Row(_c0=u'United States', _c1=u'Bahrain', _c2=u'1'), Row(_c0=u'United States', _c1=u'British Virgin Islands', _c2=u'80'), Row(_c0=u'Curacao', _c1=u'United States', _c2=u'90'), Row(_c0=u'Georgia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Denmark', _c2=u'152'), Row(_c0=u'United States', _c1=u'Guyana', _c2=u'63'), Row(_c0=u'Philippines', _c1=u'United States', _c2=u'134'), Row(_c0=u'Grenada', _c1=u'United States', _c2=u'53'), Row(_c0=u'Cape Verde', _c1=u'United States', _c2=u'20'), Row(_c0=u\"Cote d'Ivoire\", _c1=u'United States', _c2=u'1'), Row(_c0=u'Ukraine', _c1=u'United States', _c2=u'14'), Row(_c0=u'United States', _c1=u'Papua New Guinea', _c2=u'1'), Row(_c0=u'Russia', _c1=u'United States', _c2=u'176'), Row(_c0=u'United States', _c1=u'Saudi Arabia', _c2=u'70'), Row(_c0=u'Guatemala', _c1=u'United States', _c2=u'397'), Row(_c0=u'Saint Lucia', _c1=u'United States', _c2=u'123'), Row(_c0=u'Paraguay', _c1=u'United States', _c2=u'60'), Row(_c0=u'United States', _c1=u'Curacao', _c2=u'83'), Row(_c0=u'Kosovo', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Taiwan', _c2=u'235'), Row(_c0=u'Tunisia', _c1=u'United States', _c2=u'3'), Row(_c0=u'United States', _c1=u'South Africa', _c2=u'40'), Row(_c0=u'Niger', _c1=u'United States', _c2=u'2'), Row(_c0=u'Turkey', _c1=u'United States', _c2=u'138'), Row(_c0=u'United Kingdom', _c1=u'United States', _c2=u'2025'), Row(_c0=u'Romania', _c1=u'United States', _c2=u'14'), Row(_c0=u'United States', _c1=u'Greenland', _c2=u'4'), Row(_c0=u'Papua New Guinea', _c1=u'United States', _c2=u'3'), Row(_c0=u'United States', _c1=u'Spain', _c2=u'442'), Row(_c0=u'Iraq', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Italy', _c2=u'438'), Row(_c0=u'Cuba', _c1=u'United States', _c2=u'466'), Row(_c0=u'United States', _c1=u'Switzerland', _c2=u'305'), Row(_c0=u'Dominica', _c1=u'United States', _c2=u'20'), Row(_c0=u'United States', _c1=u'Japan', _c2=u'1496'), Row(_c0=u'Portugal', _c1=u'United States', _c2=u'127'), Row(_c0=u'United States', _c1=u'Brazil', _c2=u'619'), Row(_c0=u'Bahrain', _c1=u'United States', _c2=u'19'), Row(_c0=u'United States', _c1=u'Peru', _c2=u'337'), Row(_c0=u'Indonesia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Belize', _c2=u'193'), Row(_c0=u'United States', _c1=u'United Kingdom', _c2=u'1970'), Row(_c0=u'Belize', _c1=u'United States', _c2=u'188'), Row(_c0=u'United States', _c1=u'Ghana', _c2=u'20'), Row(_c0=u'United States', _c1=u'Indonesia', _c2=u'2'), Row(_c0=u'United States', _c1=u'Fiji', _c2=u'25'), Row(_c0=u'United States', _c1=u'Canada', _c2=u'8483'), Row(_c0=u'United States', _c1=u'Antigua and Barbuda', _c2=u'117'), Row(_c0=u'United States', _c1=u'French Polynesia', _c2=u'40'), Row(_c0=u'Nicaragua', _c1=u'United States', _c2=u'179'), Row(_c0=u'United States', _c1=u'Latvia', _c2=u'15'), Row(_c0=u'United States', _c1=u'Dominica', _c2=u'27'), Row(_c0=u'United States', _c1=u'Czech Republic', _c2=u'12'), Row(_c0=u'United States', _c1=u'Australia', _c2=u'258'), Row(_c0=u'United States', _c1=u'Cook Islands', _c2=u'13'), Row(_c0=u'Austria', _c1=u'United States', _c2=u'62'), Row(_c0=u'Jordan', _c1=u'United States', _c2=u'44'), Row(_c0=u'Palau', _c1=u'United States', _c2=u'30'), Row(_c0=u'South Korea', _c1=u'United States', _c2=u'1048'), Row(_c0=u'Angola', _c1=u'United States', _c2=u'15'), Row(_c0=u'Ghana', _c1=u'United States', _c2=u'18'), Row(_c0=u'New Caledonia', _c1=u'United States', _c2=u'1'), Row(_c0=u'Guadeloupe', _c1=u'United States', _c2=u'56'), Row(_c0=u'France', _c1=u'United States', _c2=u'935'), Row(_c0=u'Poland', _c1=u'United States', _c2=u'32'), Row(_c0=u'Nigeria', _c1=u'United States', _c2=u'59'), Row(_c0=u'United States', _c1=u'Uruguay', _c2=u'13'), Row(_c0=u'Greenland', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Bermuda', _c2=u'193'), Row(_c0=u'Chile', _c1=u'United States', _c2=u'174'), Row(_c0=u'United States', _c1=u'Cuba', _c2=u'478'), Row(_c0=u'United States', _c1=u'Montenegro', _c2=u'1'), Row(_c0=u'United States', _c1=u'Colombia', _c2=u'867'), Row(_c0=u'United States', _c1=u'Barbados', _c2=u'130'), Row(_c0=u'United States', _c1=u'Qatar', _c2=u'109'), Row(_c0=u'Australia', _c1=u'United States', _c2=u'329'), Row(_c0=u'United States', _c1=u'Cayman Islands', _c2=u'310'), Row(_c0=u'United States', _c1=u'Jordan', _c2=u'44'), Row(_c0=u'United States', _c1=u'Namibia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Trinidad and Tobago', _c2=u'217'), Row(_c0=u'United States', _c1=u'Bolivia', _c2=u'13'), Row(_c0=u'Cook Islands', _c1=u'United States', _c2=u'13'), Row(_c0=u'Bulgaria', _c1=u'United States', _c2=u'3'), Row(_c0=u'United States', _c1=u'Saint Kitts and Nevis', _c2=u'145'), Row(_c0=u'Uruguay', _c1=u'United States', _c2=u'43'), Row(_c0=u'United States', _c1=u'Haiti', _c2=u'225'), Row(_c0=u'Bonaire, Sint Eustatius, and Saba', _c1=u'United States', _c2=u'58'), Row(_c0=u'Greece', _c1=u'United States', _c2=u'30')], [Row(_c0=u'DEST_COUNTRY_NAME', _c1=u'ORIGIN_COUNTRY_NAME', _c2=u'count'), Row(_c0=u'United States', _c1=u'Saint Martin', _c2=u'2'), Row(_c0=u'United States', _c1=u'Guinea', _c2=u'2'), Row(_c0=u'United States', _c1=u'Croatia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Romania', _c2=u'3'), Row(_c0=u'United States', _c1=u'Ireland', _c2=u'268'), Row(_c0=u'Egypt', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'India', _c2=u'76'), Row(_c0=u'United States', _c1=u'Singapore', _c2=u'24'), Row(_c0=u'United States', _c1=u'Grenada', _c2=u'59'), Row(_c0=u'Costa Rica', _c1=u'United States', _c2=u'494'), Row(_c0=u'Senegal', _c1=u'United States', _c2=u'29'), Row(_c0=u'Guyana', _c1=u'United States', _c2=u'26'), Row(_c0=u'United States', _c1=u'Marshall Islands', _c2=u'49'), Row(_c0=u'United States', _c1=u'Sint Maarten', _c2=u'223'), Row(_c0=u'Malta', _c1=u'United States', _c2=u'1'), Row(_c0=u'Bolivia', _c1=u'United States', _c2=u'61'), Row(_c0=u'Anguilla', _c1=u'United States', _c2=u'21'), Row(_c0=u'United States', _c1=u'Paraguay', _c2=u'3'), Row(_c0=u'United States', _c1=u'Gibraltar', _c2=u'1'), Row(_c0=u'Turks and Caicos Islands', _c1=u'United States', _c2=u'163'), Row(_c0=u'United States', _c1=u'Afghanistan', _c2=u'3'), Row(_c0=u'Saint Vincent and the Grenadines', _c1=u'United States', _c2=u'6'), Row(_c0=u'Italy', _c1=u'United States', _c2=u'428'), Row(_c0=u'United States', _c1=u'Russia', _c2=u'153'), Row(_c0=u'United States', _c1=u'Federated States of Micronesia', _c2=u'54'), Row(_c0=u'Pakistan', _c1=u'United States', _c2=u'12'), Row(_c0=u'Iceland', _c1=u'United States', _c2=u'113'), Row(_c0=u'United States', _c1=u'Netherlands', _c2=u'622'), Row(_c0=u'Marshall Islands', _c1=u'United States', _c2=u'81'), Row(_c0=u'Luxembourg', _c1=u'United States', _c2=u'120'), Row(_c0=u'Honduras', _c1=u'United States', _c2=u'386'), Row(_c0=u'The Bahamas', _c1=u'United States', _c2=u'811'), Row(_c0=u'El Salvador', _c1=u'United States', _c2=u'495'), Row(_c0=u'United States', _c1=u'Senegal', _c2=u'33'), Row(_c0=u'Samoa', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Angola', _c2=u'12'), Row(_c0=u'Switzerland', _c1=u'United States', _c2=u'314'), Row(_c0=u'United States', _c1=u'Anguilla', _c2=u'20'), Row(_c0=u'Sint Maarten', _c1=u'United States', _c2=u'240'), Row(_c0=u'Hong Kong', _c1=u'United States', _c2=u'282'), Row(_c0=u'Trinidad and Tobago', _c1=u'United States', _c2=u'205'), Row(_c0=u'Latvia', _c1=u'United States', _c2=u'12'), Row(_c0=u'Yemen', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Ecuador', _c2=u'351'), Row(_c0=u'Suriname', _c1=u'United States', _c2=u'11'), Row(_c0=u'Mexico', _c1=u'United States', _c2=u'5953'), Row(_c0=u'United States', _c1=u'Cyprus', _c2=u'1'), Row(_c0=u'Ecuador', _c1=u'United States', _c2=u'280'), Row(_c0=u'United States', _c1=u'Portugal', _c2=u'109'), Row(_c0=u'United States', _c1=u'Guatemala', _c2=u'340'), Row(_c0=u'United States', _c1=u'Costa Rica', _c2=u'526'), Row(_c0=u'United States', _c1=u'Suriname', _c2=u'20'), Row(_c0=u'Colombia', _c1=u'United States', _c2=u'707'), Row(_c0=u'United States', _c1=u'Cape Verde', _c2=u'19'), Row(_c0=u'United States', _c1=u'Jamaica', _c2=u'695'), Row(_c0=u'Norway', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Malaysia', _c2=u'1'), Row(_c0=u'The Gambia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Morocco', _c2=u'17'), Row(_c0=u'Thailand', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Palau', _c2=u'41'), Row(_c0=u'Venezuela', _c1=u'United States', _c2=u'373'), Row(_c0=u'United States', _c1=u'Samoa', _c2=u'25'), Row(_c0=u'United States', _c1=u'Algeria', _c2=u'1'), Row(_c0=u'Panama', _c1=u'United States', _c2=u'397'), Row(_c0=u'United States', _c1=u'Venezuela', _c2=u'352'), Row(_c0=u'Guinea', _c1=u'United States', _c2=u'5'), Row(_c0=u'Antigua and Barbuda', _c1=u'United States', _c2=u'146'), Row(_c0=u'United States', _c1=u'Finland', _c2=u'32'), Row(_c0=u'United States', _c1=u'Chile', _c2=u'182'), Row(_c0=u'United States', _c1=u'Greece', _c2=u'45'), Row(_c0=u'Morocco', _c1=u'United States', _c2=u'19'), Row(_c0=u'United States', _c1=u'The Bahamas', _c2=u'888'), Row(_c0=u'United States', _c1=u'Brunei', _c2=u'1'), Row(_c0=u'New Zealand', _c1=u'United States', _c2=u'96'), Row(_c0=u'United States', _c1=u'Hong Kong', _c2=u'317'), Row(_c0=u'Hungary', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'China', _c2=u'605'), Row(_c0=u'Sweden', _c1=u'United States', _c2=u'59'), Row(_c0=u'United States', _c1=u'Kuwait', _c2=u'27'), Row(_c0=u'United States', _c1=u'Dominican Republic', _c2=u'1100'), Row(_c0=u'United States', _c1=u'Egypt', _c2=u'15'), Row(_c0=u'Israel', _c1=u'United States', _c2=u'121'), Row(_c0=u'United States', _c1=u'United States', _c2=u'352742'), Row(_c0=u'United States', _c1=u'Luxembourg', _c2=u'170'), Row(_c0=u'Ethiopia', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Poland', _c2=u'42'), Row(_c0=u'Martinique', _c1=u'United States', _c2=u'20'), Row(_c0=u'Saint Barthelemy', _c1=u'United States', _c2=u'38'), Row(_c0=u'United States', _c1=u'Saint Barthelemy', _c2=u'39'), Row(_c0=u'Barbados', _c1=u'United States', _c2=u'129'), Row(_c0=u'United States', _c1=u'Turkey', _c2=u'99'), Row(_c0=u'United States', _c1=u'Azerbaijan', _c2=u'3'), Row(_c0=u'Germany', _c1=u'United States', _c2=u'1423'), Row(_c0=u'United States', _c1=u'South Korea', _c2=u'661'), Row(_c0=u'United States', _c1=u'El Salvador', _c2=u'443'), Row(_c0=u'Ireland', _c1=u'United States', _c2=u'250'), Row(_c0=u'United States', _c1=u'Hungary', _c2=u'17'), Row(_c0=u'Malaysia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Panama', _c2=u'380'), Row(_c0=u'United States', _c1=u'Ethiopia', _c2=u'12'), Row(_c0=u'United States', _c1=u'Thailand', _c2=u'14'), Row(_c0=u'United States', _c1=u'Aruba', _c2=u'332'), Row(_c0=u'United States', _c1=u'Turks and Caicos Islands', _c2=u'177'), Row(_c0=u'Croatia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Pakistan', _c2=u'24'), Row(_c0=u'United States', _c1=u'Honduras', _c2=u'388'), Row(_c0=u'Qatar', _c1=u'United States', _c2=u'48'), Row(_c0=u'Fiji', _c1=u'United States', _c2=u'49'), Row(_c0=u'Saint Kitts and Nevis', _c1=u'United States', _c2=u'105'), Row(_c0=u'Taiwan', _c1=u'United States', _c2=u'248'), Row(_c0=u'Haiti', _c1=u'United States', _c2=u'188'), Row(_c0=u'Kuwait', _c1=u'United States', _c2=u'27'), Row(_c0=u'Canada', _c1=u'United States', _c2=u'8514'), Row(_c0=u'Belarus', _c1=u'United States', _c2=u'1'), Row(_c0=u'Federated States of Micronesia', _c1=u'United States', _c2=u'48'), Row(_c0=u'Jamaica', _c1=u'United States', _c2=u'675'), Row(_c0=u'United States', _c1=u'Malta', _c2=u'3'), Row(_c0=u'Dominican Republic', _c1=u'United States', _c2=u'1020'), Row(_c0=u'Japan', _c1=u'United States', _c2=u'1532'), Row(_c0=u'United States', _c1=u'Lithuania', _c2=u'1'), Row(_c0=u'United States', _c1=u'Saint Vincent and the Grenadines', _c2=u'17'), Row(_c0=u'Finland', _c1=u'United States', _c2=u'33'), Row(_c0=u'United States', _c1=u'Ukraine', _c2=u'15'), Row(_c0=u'United States', _c1=u'Guadeloupe', _c2=u'31'), Row(_c0=u'United States', _c1=u'France', _c2=u'914'), Row(_c0=u'Aruba', _c1=u'United States', _c2=u'347'), Row(_c0=u'French Guiana', _c1=u'United States', _c2=u'14'), Row(_c0=u'United States', _c1=u'Norway', _c2=u'33'), Row(_c0=u'United States', _c1=u'Kiribati', _c2=u'28'), Row(_c0=u'India', _c1=u'United States', _c2=u'73'), Row(_c0=u'British Virgin Islands', _c1=u'United States', _c2=u'73'), Row(_c0=u'United States', _c1=u'Germany', _c2=u'1480'), Row(_c0=u'Brazil', _c1=u'United States', _c2=u'969'), Row(_c0=u'United States', _c1=u'New Zealand', _c2=u'77'), Row(_c0=u'French Polynesia', _c1=u'United States', _c2=u'36'), Row(_c0=u'United Arab Emirates', _c1=u'United States', _c2=u'157'), Row(_c0=u'Singapore', _c1=u'United States', _c2=u'27'), Row(_c0=u'United States', _c1=u'Mexico', _c2=u'6000'), Row(_c0=u'Netherlands', _c1=u'United States', _c2=u'635'), Row(_c0=u'United States', _c1=u'Sweden', _c2=u'68'), Row(_c0=u'United States', _c1=u'Martinique', _c2=u'20'), Row(_c0=u'United States', _c1=u'United Arab Emirates', _c2=u'142'), Row(_c0=u'China', _c1=u'United States', _c2=u'504'), Row(_c0=u'United States', _c1=u'Philippines', _c2=u'109'), Row(_c0=u'United States', _c1=u'Nicaragua', _c2=u'173'), Row(_c0=u'Denmark', _c1=u'United States', _c2=u'95'), Row(_c0=u'United States', _c1=u'Georgia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Belgium', _c2=u'369'), Row(_c0=u'Libya', _c1=u'United States', _c2=u'1'), Row(_c0=u'Argentina', _c1=u'United States', _c2=u'183'), Row(_c0=u'Peru', _c1=u'United States', _c2=u'246'), Row(_c0=u'Cayman Islands', _c1=u'United States', _c2=u'251'), Row(_c0=u'South Africa', _c1=u'United States', _c2=u'24'), Row(_c0=u'United States', _c1=u'Argentina', _c2=u'152'), Row(_c0=u'United States', _c1=u'Iceland', _c2=u'138'), Row(_c0=u'Spain', _c1=u'United States', _c2=u'445'), Row(_c0=u'Bermuda', _c1=u'United States', _c2=u'191'), Row(_c0=u'United States', _c1=u'Austria', _c2=u'34'), Row(_c0=u'United States', _c1=u'Nigeria', _c2=u'26'), Row(_c0=u'United States', _c1=u'Bonaire, Sint Eustatius, and Saba', _c2=u'49'), Row(_c0=u'Kiribati', _c1=u'United States', _c2=u'28'), Row(_c0=u'Czech Republic', _c1=u'United States', _c2=u'23'), Row(_c0=u'Saudi Arabia', _c1=u'United States', _c2=u'83'), Row(_c0=u'Macau', _c1=u'United States', _c2=u'2'), Row(_c0=u'Belgium', _c1=u'United States', _c2=u'376'), Row(_c0=u'United States', _c1=u'Israel', _c2=u'126'), Row(_c0=u'United States', _c1=u'Saint Lucia', _c2=u'102'), Row(_c0=u'United States', _c1=u'Bahrain', _c2=u'2'), Row(_c0=u'United States', _c1=u'British Virgin Islands', _c2=u'65'), Row(_c0=u'Afghanistan', _c1=u'United States', _c2=u'8'), Row(_c0=u'Curacao', _c1=u'United States', _c2=u'106'), Row(_c0=u'Georgia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Guyana', _c2=u'29'), Row(_c0=u'Philippines', _c1=u'United States', _c2=u'127'), Row(_c0=u'United States', _c1=u'Denmark', _c2=u'103'), Row(_c0=u'Grenada', _c1=u'United States', _c2=u'67'), Row(_c0=u'Cape Verde', _c1=u'United States', _c2=u'13'), Row(_c0=u'Ukraine', _c1=u'United States', _c2=u'15'), Row(_c0=u'United States', _c1=u'Papua New Guinea', _c2=u'1'), Row(_c0=u'Russia', _c1=u'United States', _c2=u'199'), Row(_c0=u'United States', _c1=u'Saudi Arabia', _c2=u'77'), Row(_c0=u'Guatemala', _c1=u'United States', _c2=u'407'), Row(_c0=u'Saint Lucia', _c1=u'United States', _c2=u'102'), Row(_c0=u'Paraguay', _c1=u'United States', _c2=u'85'), Row(_c0=u'United States', _c1=u'Curacao', _c2=u'97'), Row(_c0=u'United States', _c1=u'Taiwan', _c2=u'231'), Row(_c0=u'United States', _c1=u'South Africa', _c2=u'21'), Row(_c0=u'Togo', _c1=u'United States', _c2=u'1'), Row(_c0=u'Turkey', _c1=u'United States', _c2=u'104'), Row(_c0=u'United Kingdom', _c1=u'United States', _c2=u'1726'), Row(_c0=u'Romania', _c1=u'United States', _c2=u'4'), Row(_c0=u'United States', _c1=u'Greenland', _c2=u'2'), Row(_c0=u'United States', _c1=u'Spain', _c2=u'472'), Row(_c0=u'Cuba', _c1=u'United States', _c2=u'320'), Row(_c0=u'United States', _c1=u'Italy', _c2=u'447'), Row(_c0=u'United States', _c1=u'Switzerland', _c2=u'319'), Row(_c0=u'Dominica', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Japan', _c2=u'1412'), Row(_c0=u'Portugal', _c1=u'United States', _c2=u'95'), Row(_c0=u'United States', _c1=u'Brazil', _c2=u'575'), Row(_c0=u'Bahrain', _c1=u'United States', _c2=u'40'), Row(_c0=u'United States', _c1=u'Peru', _c2=u'288'), Row(_c0=u'Vietnam', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'United Kingdom', _c2=u'1649'), Row(_c0=u'United States', _c1=u'Belize', _c2=u'112'), Row(_c0=u'Belize', _c1=u'United States', _c2=u'113'), Row(_c0=u'United States', _c1=u'Ghana', _c2=u'39'), Row(_c0=u'Mauritania', _c1=u'United States', _c2=u'1'), Row(_c0=u'Saint Martin', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Indonesia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Fiji', _c2=u'48'), Row(_c0=u'United States', _c1=u'Mauritania', _c2=u'1'), Row(_c0=u'United States', _c1=u'Canada', _c2=u'8650'), Row(_c0=u'United States', _c1=u'Antigua and Barbuda', _c2=u'152'), Row(_c0=u'United States', _c1=u'French Polynesia', _c2=u'36'), Row(_c0=u'Nicaragua', _c1=u'United States', _c2=u'180'), Row(_c0=u'Namibia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Latvia', _c2=u'12'), Row(_c0=u'United States', _c1=u'Dominica', _c2=u'29'), Row(_c0=u'United States', _c1=u'Czech Republic', _c2=u'25'), Row(_c0=u'United States', _c1=u'Australia', _c2=u'231'), Row(_c0=u'United States', _c1=u'Cook Islands', _c2=u'12'), Row(_c0=u'Austria', _c1=u'United States', _c2=u'34'), Row(_c0=u'Palau', _c1=u'United States', _c2=u'41'), Row(_c0=u'Jordan', _c1=u'United States', _c2=u'42'), Row(_c0=u'South Korea', _c1=u'United States', _c2=u'713'), Row(_c0=u'Ghana', _c1=u'United States', _c2=u'39'), Row(_c0=u'Angola', _c1=u'United States', _c2=u'13'), Row(_c0=u'Guadeloupe', _c1=u'United States', _c2=u'33'), Row(_c0=u'France', _c1=u'United States', _c2=u'876'), Row(_c0=u'Nigeria', _c1=u'United States', _c2=u'31'), Row(_c0=u'Poland', _c1=u'United States', _c2=u'39'), Row(_c0=u'United States', _c1=u'Uruguay', _c2=u'27'), Row(_c0=u'Greenland', _c1=u'United States', _c2=u'1'), Row(_c0=u'Chile', _c1=u'United States', _c2=u'178'), Row(_c0=u'United States', _c1=u'Bermuda', _c2=u'196'), Row(_c0=u'Lebanon', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Cuba', _c2=u'326'), Row(_c0=u'United States', _c1=u'Colombia', _c2=u'777'), Row(_c0=u'United States', _c1=u'Barbados', _c2=u'125'), Row(_c0=u'United States', _c1=u'Qatar', _c2=u'48'), Row(_c0=u'Australia', _c1=u'United States', _c2=u'280'), Row(_c0=u'United States', _c1=u'Cayman Islands', _c2=u'262'), Row(_c0=u'United States', _c1=u'Jordan', _c2=u'45'), Row(_c0=u'United States', _c1=u'Bolivia', _c2=u'51'), Row(_c0=u'United States', _c1=u'Trinidad and Tobago', _c2=u'213'), Row(_c0=u'Uruguay', _c1=u'United States', _c2=u'50'), Row(_c0=u'Cook Islands', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Saint Kitts and Nevis', _c2=u'120'), Row(_c0=u'Bulgaria', _c1=u'United States', _c2=u'4'), Row(_c0=u'United States', _c1=u'French Guiana', _c2=u'11'), Row(_c0=u'United States', _c1=u'Haiti', _c2=u'197'), Row(_c0=u'Bonaire, Sint Eustatius, and Saba', _c1=u'United States', _c2=u'50'), Row(_c0=u'Greece', _c1=u'United States', _c2=u'38'), Row(_c0=u'DEST_COUNTRY_NAME', _c1=u'ORIGIN_COUNTRY_NAME', _c2=u'count'), Row(_c0=u'United States', _c1=u'Romania', _c2=u'12'), Row(_c0=u'United States', _c1=u'Croatia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Ireland', _c2=u'266'), Row(_c0=u'Egypt', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'India', _c2=u'60'), Row(_c0=u'Equatorial Guinea', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Niger', _c2=u'1'), Row(_c0=u'United States', _c1=u'Singapore', _c2=u'22'), Row(_c0=u'United States', _c1=u'Grenada', _c2=u'40'), Row(_c0=u'Costa Rica', _c1=u'United States', _c2=u'509'), Row(_c0=u'Senegal', _c1=u'United States', _c2=u'28'), Row(_c0=u'Guyana', _c1=u'United States', _c2=u'34'), Row(_c0=u'United States', _c1=u'Sint Maarten', _c2=u'260'), Row(_c0=u'United States', _c1=u'Marshall Islands', _c2=u'33'), Row(_c0=u'Bolivia', _c1=u'United States', _c2=u'33'), Row(_c0=u'Anguilla', _c1=u'United States', _c2=u'22'), Row(_c0=u'United States', _c1=u'Paraguay', _c2=u'15'), Row(_c0=u'Algeria', _c1=u'United States', _c2=u'2'), Row(_c0=u'Turks and Caicos Islands', _c1=u'United States', _c2=u'181'), Row(_c0=u'Saint Vincent and the Grenadines', _c1=u'United States', _c2=u'4'), Row(_c0=u'Lithuania', _c1=u'United States', _c2=u'1'), Row(_c0=u'Pakistan', _c1=u'United States', _c2=u'14'), Row(_c0=u'Italy', _c1=u'United States', _c2=u'327'), Row(_c0=u'United States', _c1=u'Russia', _c2=u'167'), Row(_c0=u'United States', _c1=u'Federated States of Micronesia', _c2=u'62'), Row(_c0=u'United States', _c1=u'Netherlands', _c2=u'618'), Row(_c0=u'Iceland', _c1=u'United States', _c2=u'146'), Row(_c0=u'Marshall Islands', _c1=u'United States', _c2=u'50'), Row(_c0=u'Luxembourg', _c1=u'United States', _c2=u'160'), Row(_c0=u'Honduras', _c1=u'United States', _c2=u'423'), Row(_c0=u'Rwanda', _c1=u'United States', _c2=u'1'), Row(_c0=u'The Bahamas', _c1=u'United States', _c2=u'865'), Row(_c0=u'El Salvador', _c1=u'United States', _c2=u'551'), Row(_c0=u'United States', _c1=u'Senegal', _c2=u'32'), Row(_c0=u'Samoa', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Angola', _c2=u'12'), Row(_c0=u'Kazakhstan', _c1=u'United States', _c2=u'2'), Row(_c0=u'Switzerland', _c1=u'United States', _c2=u'288'), Row(_c0=u'United States', _c1=u'Anguilla', _c2=u'18'), Row(_c0=u'United States', _c1=u'Mali', _c2=u'1'), Row(_c0=u'Sint Maarten', _c1=u'United States', _c2=u'271'), Row(_c0=u'Hong Kong', _c1=u'United States', _c2=u'282'), Row(_c0=u'Trinidad and Tobago', _c1=u'United States', _c2=u'183'), Row(_c0=u'Latvia', _c1=u'United States', _c2=u'29'), Row(_c0=u'United States', _c1=u'Ecuador', _c2=u'307'), Row(_c0=u'Suriname', _c1=u'United States', _c2=u'15'), Row(_c0=u'Mexico', _c1=u'United States', _c2=u'6372'), Row(_c0=u'Ecuador', _c1=u'United States', _c2=u'252'), Row(_c0=u'United States', _c1=u'Portugal', _c2=u'126'), Row(_c0=u'United States', _c1=u'Costa Rica', _c2=u'549'), Row(_c0=u'United States', _c1=u'Guatemala', _c2=u'331'), Row(_c0=u'United States', _c1=u'Suriname', _c2=u'21'), Row(_c0=u'Colombia', _c1=u'United States', _c2=u'798'), Row(_c0=u'United States', _c1=u'Cape Verde', _c2=u'15'), Row(_c0=u'Norway', _c1=u'United States', _c2=u'48'), Row(_c0=u'United States', _c1=u'Jamaica', _c2=u'599'), Row(_c0=u'United States', _c1=u'Malaysia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Morocco', _c2=u'16'), Row(_c0=u'Thailand', _c1=u'United States', _c2=u'2'), Row(_c0=u'Burundi', _c1=u'United States', _c2=u'1'), Row(_c0=u'Venezuela', _c1=u'United States', _c2=u'350'), Row(_c0=u'United States', _c1=u'Samoa', _c2=u'25'), Row(_c0=u'United States', _c1=u'Palau', _c2=u'35'), Row(_c0=u'United States', _c1=u'Venezuela', _c2=u'295'), Row(_c0=u'Panama', _c1=u'United States', _c2=u'418'), Row(_c0=u'United States', _c1=u'Finland', _c2=u'15'), Row(_c0=u'Morocco', _c1=u'United States', _c2=u'18'), Row(_c0=u'Antigua and Barbuda', _c1=u'United States', _c2=u'123'), Row(_c0=u'United States', _c1=u'Chile', _c2=u'171'), Row(_c0=u'Azerbaijan', _c1=u'United States', _c2=u'3'), Row(_c0=u'United States', _c1=u'Greece', _c2=u'14'), Row(_c0=u'United States', _c1=u'The Bahamas', _c2=u'897'), Row(_c0=u'New Zealand', _c1=u'United States', _c2=u'114'), Row(_c0=u'United States', _c1=u'Hong Kong', _c2=u'344'), Row(_c0=u'Hungary', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'China', _c2=u'614'), Row(_c0=u'United States', _c1=u'Kuwait', _c2=u'24'), Row(_c0=u'Sweden', _c1=u'United States', _c2=u'70'), Row(_c0=u'United States', _c1=u'Egypt', _c2=u'12'), Row(_c0=u'United States', _c1=u'Dominican Republic', _c2=u'1119'), Row(_c0=u'Israel', _c1=u'United States', _c2=u'119'), Row(_c0=u'United States', _c1=u'United States', _c2=u'343132'), Row(_c0=u'United States', _c1=u'Luxembourg', _c2=u'134'), Row(_c0=u'Ethiopia', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Poland', _c2=u'37'), Row(_c0=u'Martinique', _c1=u'United States', _c2=u'26'), Row(_c0=u'United States', _c1=u'Zimbabwe', _c2=u'2'), Row(_c0=u'United States', _c1=u'Saint Barthelemy', _c2=u'58'), Row(_c0=u'Saint Barthelemy', _c1=u'United States', _c2=u'67'), Row(_c0=u'United States', _c1=u'Turkey', _c2=u'100'), Row(_c0=u'Barbados', _c1=u'United States', _c2=u'97'), Row(_c0=u'Germany', _c1=u'United States', _c2=u'1423'), Row(_c0=u'Kyrgyzstan', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'South Korea', _c2=u'687'), Row(_c0=u'United States', _c1=u'El Salvador', _c2=u'466'), Row(_c0=u'Ireland', _c1=u'United States', _c2=u'255'), Row(_c0=u'Malaysia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Aruba', _c2=u'344'), Row(_c0=u'United States', _c1=u'Panama', _c2=u'419'), Row(_c0=u'United States', _c1=u'Ethiopia', _c2=u'12'), Row(_c0=u'United States', _c1=u'Turks and Caicos Islands', _c2=u'178'), Row(_c0=u'United States', _c1=u'Pakistan', _c2=u'12'), Row(_c0=u'Cyprus', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Honduras', _c2=u'392'), Row(_c0=u'Fiji', _c1=u'United States', _c2=u'34'), Row(_c0=u'Qatar', _c1=u'United States', _c2=u'71'), Row(_c0=u'Saint Kitts and Nevis', _c1=u'United States', _c2=u'99'), Row(_c0=u'Kuwait', _c1=u'United States', _c2=u'24'), Row(_c0=u'Haiti', _c1=u'United States', _c2=u'199'), Row(_c0=u'Taiwan', _c1=u'United States', _c2=u'243'), Row(_c0=u'Canada', _c1=u'United States', _c2=u'7860'), Row(_c0=u'Federated States of Micronesia', _c1=u'United States', _c2=u'53'), Row(_c0=u'Jamaica', _c1=u'United States', _c2=u'581'), Row(_c0=u'Dominican Republic', _c1=u'United States', _c2=u'1068'), Row(_c0=u'Japan', _c1=u'United States', _c2=u'1613'), Row(_c0=u'United States', _c1=u'Saint Vincent and the Grenadines', _c2=u'10'), Row(_c0=u'Finland', _c1=u'United States', _c2=u'17'), Row(_c0=u'United States', _c1=u'Ukraine', _c2=u'4'), Row(_c0=u'United States', _c1=u'Guadeloupe', _c2=u'42'), Row(_c0=u'United States', _c1=u'France', _c2=u'848'), Row(_c0=u'United States', _c1=u'Norway', _c2=u'46'), Row(_c0=u'Aruba', _c1=u'United States', _c2=u'352'), Row(_c0=u'French Guiana', _c1=u'United States', _c2=u'7'), Row(_c0=u'United States', _c1=u'Kiribati', _c2=u'29'), Row(_c0=u'Zimbabwe', _c1=u'United States', _c2=u'2'), Row(_c0=u'India', _c1=u'United States', _c2=u'61'), Row(_c0=u'British Virgin Islands', _c1=u'United States', _c2=u'101'), Row(_c0=u'United States', _c1=u'Germany', _c2=u'1402'), Row(_c0=u'United States', _c1=u'New Zealand', _c2=u'77'), Row(_c0=u'Brazil', _c1=u'United States', _c2=u'912'), Row(_c0=u'Saint Helena, Ascension, and Tristan da Cunha', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Cambodia', _c2=u'3'), Row(_c0=u'French Polynesia', _c1=u'United States', _c2=u'43'), Row(_c0=u'United Arab Emirates', _c1=u'United States', _c2=u'202'), Row(_c0=u'Singapore', _c1=u'United States', _c2=u'21'), Row(_c0=u'Tanzania', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Mexico', _c2=u'6354'), Row(_c0=u'Netherlands', _c1=u'United States', _c2=u'640'), Row(_c0=u'United States', _c1=u'Sweden', _c2=u'73'), Row(_c0=u'United States', _c1=u'Martinique', _c2=u'24'), Row(_c0=u'United States', _c1=u'United Arab Emirates', _c2=u'187'), Row(_c0=u'Denmark', _c1=u'United States', _c2=u'104'), Row(_c0=u'China', _c1=u'United States', _c2=u'543'), Row(_c0=u'United States', _c1=u'Nicaragua', _c2=u'185'), Row(_c0=u'United States', _c1=u'Philippines', _c2=u'112'), Row(_c0=u'United States', _c1=u'Belgium', _c2=u'193'), Row(_c0=u'Nepal', _c1=u'United States', _c2=u'1'), Row(_c0=u'Libya', _c1=u'United States', _c2=u'1'), Row(_c0=u'Argentina', _c1=u'United States', _c2=u'176'), Row(_c0=u'Peru', _c1=u'United States', _c2=u'255'), Row(_c0=u'Cayman Islands', _c1=u'United States', _c2=u'274'), Row(_c0=u'South Africa', _c1=u'United States', _c2=u'24'), Row(_c0=u'United States', _c1=u'Iceland', _c2=u'151'), Row(_c0=u'United States', _c1=u'Argentina', _c2=u'140'), Row(_c0=u'Spain', _c1=u'United States', _c2=u'370'), Row(_c0=u'Bermuda', _c1=u'United States', _c2=u'163'), Row(_c0=u'United States', _c1=u'Nigeria', _c2=u'49'), Row(_c0=u'United States', _c1=u'Austria', _c2=u'39'), Row(_c0=u'United States', _c1=u'Bonaire, Sint Eustatius, and Saba', _c2=u'54'), Row(_c0=u'Kiribati', _c1=u'United States', _c2=u'29'), Row(_c0=u'Saudi Arabia', _c1=u'United States', _c2=u'86'), Row(_c0=u'Czech Republic', _c1=u'United States', _c2=u'10'), Row(_c0=u'Macau', _c1=u'United States', _c2=u'2'), Row(_c0=u'Belgium', _c1=u'United States', _c2=u'265'), Row(_c0=u'United States', _c1=u'Israel', _c2=u'107'), Row(_c0=u'United States', _c1=u'Saint Lucia', _c2=u'92'), Row(_c0=u'Sierra Leone', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Bahrain', _c2=u'1'), Row(_c0=u'United States', _c1=u'British Virgin Islands', _c2=u'94'), Row(_c0=u'United States', _c1=u'Saint Helena, Ascension, and Tristan da Cunha', _c2=u'2'), Row(_c0=u'Curacao', _c1=u'United States', _c2=u'97'), Row(_c0=u'United States', _c1=u'Denmark', _c2=u'106'), Row(_c0=u'United States', _c1=u'Guyana', _c2=u'52'), Row(_c0=u'Philippines', _c1=u'United States', _c2=u'136'), Row(_c0=u'Grenada', _c1=u'United States', _c2=u'42'), Row(_c0=u'Cape Verde', _c1=u'United States', _c2=u'21'), Row(_c0=u'Ukraine', _c1=u'United States', _c2=u'4'), Row(_c0=u'Russia', _c1=u'United States', _c2=u'194'), Row(_c0=u'United States', _c1=u'Saudi Arabia', _c2=u'84'), Row(_c0=u'Guatemala', _c1=u'United States', _c2=u'376'), Row(_c0=u'Saint Lucia', _c1=u'United States', _c2=u'91'), Row(_c0=u'Paraguay', _c1=u'United States', _c2=u'75'), Row(_c0=u'United States', _c1=u'Curacao', _c2=u'89'), Row(_c0=u'United States', _c1=u'Taiwan', _c2=u'235'), Row(_c0=u'United States', _c1=u'South Africa', _c2=u'26'), Row(_c0=u'Niger', _c1=u'United States', _c2=u'1'), Row(_c0=u'Turkey', _c1=u'United States', _c2=u'99'), Row(_c0=u'United Kingdom', _c1=u'United States', _c2=u'1802'), Row(_c0=u'Romania', _c1=u'United States', _c2=u'14'), Row(_c0=u'United States', _c1=u'Greenland', _c2=u'3'), Row(_c0=u'Papua New Guinea', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Spain', _c2=u'377'), Row(_c0=u'United States', _c1=u'Italy', _c2=u'333'), Row(_c0=u'Cuba', _c1=u'United States', _c2=u'337'), Row(_c0=u'United States', _c1=u'Switzerland', _c2=u'285'), Row(_c0=u'Dominica', _c1=u'United States', _c2=u'19'), Row(_c0=u'Portugal', _c1=u'United States', _c2=u'116'), Row(_c0=u'United States', _c1=u'Japan', _c2=u'1476'), Row(_c0=u'United States', _c1=u'Brazil', _c2=u'510'), Row(_c0=u'Bahrain', _c1=u'United States', _c2=u'50'), Row(_c0=u'United States', _c1=u'Peru', _c2=u'300'), Row(_c0=u'Indonesia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'United Kingdom', _c2=u'1711'), Row(_c0=u'United States', _c1=u'Belize', _c2=u'127'), Row(_c0=u'Belize', _c1=u'United States', _c2=u'137'), Row(_c0=u'Kenya', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Ghana', _c2=u'16'), Row(_c0=u'United States', _c1=u'Fiji', _c2=u'30'), Row(_c0=u'United States', _c1=u'Canada', _c2=u'7983'), Row(_c0=u'United States', _c1=u'French Polynesia', _c2=u'40'), Row(_c0=u'United States', _c1=u'Antigua and Barbuda', _c2=u'123'), Row(_c0=u'Brunei', _c1=u'United States', _c2=u'1'), Row(_c0=u'Nicaragua', _c1=u'United States', _c2=u'178'), Row(_c0=u'United States', _c1=u'Latvia', _c2=u'12'), Row(_c0=u'United States', _c1=u'Dominica', _c2=u'25'), Row(_c0=u'United States', _c1=u'Czech Republic', _c2=u'9'), Row(_c0=u'United States', _c1=u'Cook Islands', _c2=u'12'), Row(_c0=u'Austria', _c1=u'United States', _c2=u'35'), Row(_c0=u'United States', _c1=u'Australia', _c2=u'222'), Row(_c0=u'Jordan', _c1=u'United States', _c2=u'74'), Row(_c0=u'Palau', _c1=u'United States', _c2=u'35'), Row(_c0=u'South Korea', _c1=u'United States', _c2=u'842'), Row(_c0=u'Angola', _c1=u'United States', _c2=u'12'), Row(_c0=u'Ghana', _c1=u'United States', _c2=u'16'), Row(_c0=u'New Caledonia', _c1=u'United States', _c2=u'1'), Row(_c0=u'Guadeloupe', _c1=u'United States', _c2=u'41'), Row(_c0=u'France', _c1=u'United States', _c2=u'837'), Row(_c0=u'Poland', _c1=u'United States', _c2=u'40'), Row(_c0=u'Nigeria', _c1=u'United States', _c2=u'58'), Row(_c0=u'United States', _c1=u'Uruguay', _c2=u'20'), Row(_c0=u'Greenland', _c1=u'United States', _c2=u'1'), Row(_c0=u'Chile', _c1=u'United States', _c2=u'147'), Row(_c0=u'United States', _c1=u'Bermuda', _c2=u'166'), Row(_c0=u'Lebanon', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Cuba', _c2=u'336'), Row(_c0=u'United States', _c1=u'Colombia', _c2=u'811'), Row(_c0=u'United States', _c1=u'Qatar', _c2=u'72'), Row(_c0=u'United States', _c1=u'Barbados', _c2=u'78'), Row(_c0=u'Australia', _c1=u'United States', _c2=u'295'), Row(_c0=u'United States', _c1=u'Cayman Islands', _c2=u'274'), Row(_c0=u'United States', _c1=u'Jordan', _c2=u'77'), Row(_c0=u'United States', _c1=u'Trinidad and Tobago', _c2=u'184'), Row(_c0=u'United States', _c1=u'Bolivia', _c2=u'13'), Row(_c0=u'Uruguay', _c1=u'United States', _c2=u'57'), Row(_c0=u'Cook Islands', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Saint Kitts and Nevis', _c2=u'115'), Row(_c0=u'United States', _c1=u'French Guiana', _c2=u'3'), Row(_c0=u'United States', _c1=u'Haiti', _c2=u'186'), Row(_c0=u'Bonaire, Sint Eustatius, and Saba', _c1=u'United States', _c2=u'53'), Row(_c0=u'Greece', _c1=u'United States', _c2=u'12')], [Row(_c0=u'DEST_COUNTRY_NAME', _c1=u'ORIGIN_COUNTRY_NAME', _c2=u'count'), Row(_c0=u'United States', _c1=u'Croatia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Ireland', _c2=u'252'), Row(_c0=u'Egypt', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'India', _c2=u'62'), Row(_c0=u'United States', _c1=u'Singapore', _c2=u'25'), Row(_c0=u'United States', _c1=u'Grenada', _c2=u'46'), Row(_c0=u'Costa Rica', _c1=u'United States', _c2=u'522'), Row(_c0=u'Senegal', _c1=u'United States', _c2=u'31'), Row(_c0=u'Guyana', _c1=u'United States', _c2=u'65'), Row(_c0=u'United States', _c1=u'Marshall Islands', _c2=u'30'), Row(_c0=u'United States', _c1=u'Sint Maarten', _c2=u'245'), Row(_c0=u'Bolivia', _c1=u'United States', _c2=u'35'), Row(_c0=u'Anguilla', _c1=u'United States', _c2=u'19'), Row(_c0=u'United States', _c1=u'Paraguay', _c2=u'5'), Row(_c0=u'United States', _c1=u'Afghanistan', _c2=u'5'), Row(_c0=u'Turks and Caicos Islands', _c1=u'United States', _c2=u'183'), Row(_c0=u'Saint Vincent and the Grenadines', _c1=u'United States', _c2=u'6'), Row(_c0=u'Italy', _c1=u'United States', _c2=u'381'), Row(_c0=u'Pakistan', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Russia', _c2=u'148'), Row(_c0=u'United States', _c1=u'Federated States of Micronesia', _c2=u'63'), Row(_c0=u'United States', _c1=u'Netherlands', _c2=u'607'), Row(_c0=u'Iceland', _c1=u'United States', _c2=u'137'), Row(_c0=u'Marshall Islands', _c1=u'United States', _c2=u'60'), Row(_c0=u'United States', _c1=u'Togo', _c2=u'1'), Row(_c0=u'Luxembourg', _c1=u'United States', _c2=u'111'), Row(_c0=u'Honduras', _c1=u'United States', _c2=u'413'), Row(_c0=u'The Bahamas', _c1=u'United States', _c2=u'975'), Row(_c0=u'El Salvador', _c1=u'United States', _c2=u'539'), Row(_c0=u'United States', _c1=u'Senegal', _c2=u'33'), Row(_c0=u'United States', _c1=u'Solomon Islands', _c2=u'1'), Row(_c0=u'United States', _c1=u'Angola', _c2=u'12'), Row(_c0=u'Samoa', _c1=u'United States', _c2=u'25'), Row(_c0=u'Kazakhstan', _c1=u'United States', _c2=u'1'), Row(_c0=u'Switzerland', _c1=u'United States', _c2=u'285'), Row(_c0=u'United States', _c1=u'Anguilla', _c2=u'19'), Row(_c0=u'Sint Maarten', _c1=u'United States', _c2=u'243'), Row(_c0=u'Hong Kong', _c1=u'United States', _c2=u'296'), Row(_c0=u'Trinidad and Tobago', _c1=u'United States', _c2=u'216'), Row(_c0=u'Latvia', _c1=u'United States', _c2=u'13'), Row(_c0=u'United States', _c1=u'Ecuador', _c2=u'321'), Row(_c0=u'Suriname', _c1=u'United States', _c2=u'14'), Row(_c0=u'Mexico', _c1=u'United States', _c2=u'5983'), Row(_c0=u'Ecuador', _c1=u'United States', _c2=u'239'), Row(_c0=u'United States', _c1=u'Portugal', _c2=u'111'), Row(_c0=u'United States', _c1=u'Costa Rica', _c2=u'555'), Row(_c0=u'United States', _c1=u'Guatemala', _c2=u'345'), Row(_c0=u'United States', _c1=u'Suriname', _c2=u'26'), Row(_c0=u'Colombia', _c1=u'United States', _c2=u'759'), Row(_c0=u'United States', _c1=u'The Gambia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Cape Verde', _c2=u'18'), Row(_c0=u'United States', _c1=u'Jamaica', _c2=u'610'), Row(_c0=u'Norway', _c1=u'United States', _c2=u'31'), Row(_c0=u'The Gambia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Morocco', _c2=u'16'), Row(_c0=u'Thailand', _c1=u'United States', _c2=u'6'), Row(_c0=u'Venezuela', _c1=u'United States', _c2=u'389'), Row(_c0=u'United States', _c1=u'Samoa', _c2=u'25'), Row(_c0=u'United States', _c1=u'Palau', _c2=u'35'), Row(_c0=u'United States', _c1=u'Venezuela', _c2=u'360'), Row(_c0=u'Panama', _c1=u'United States', _c2=u'394'), Row(_c0=u'United States', _c1=u'Chile', _c2=u'201'), Row(_c0=u'United States', _c1=u'Finland', _c2=u'21'), Row(_c0=u'Antigua and Barbuda', _c1=u'United States', _c2=u'145'), Row(_c0=u'Morocco', _c1=u'United States', _c2=u'15'), Row(_c0=u'United States', _c1=u'Greece', _c2=u'21'), Row(_c0=u'United States', _c1=u'The Bahamas', _c2=u'1054'), Row(_c0=u'New Zealand', _c1=u'United States', _c2=u'92'), Row(_c0=u'United States', _c1=u'Hong Kong', _c2=u'331'), Row(_c0=u'Hungary', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Tunisia', _c2=u'1'), Row(_c0=u'United States', _c1=u'China', _c2=u'610'), Row(_c0=u'Sweden', _c1=u'United States', _c2=u'50'), Row(_c0=u'United States', _c1=u'Kuwait', _c2=u'28'), Row(_c0=u'United States', _c1=u'Dominican Republic', _c2=u'1123'), Row(_c0=u'United States', _c1=u'Egypt', _c2=u'12'), Row(_c0=u'Israel', _c1=u'United States', _c2=u'117'), Row(_c0=u'United States', _c1=u'United States', _c2=u'347452'), Row(_c0=u'United States', _c1=u'Luxembourg', _c2=u'123'), Row(_c0=u'Ethiopia', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Poland', _c2=u'40'), Row(_c0=u'Martinique', _c1=u'United States', _c2=u'17'), Row(_c0=u'United States', _c1=u'Saint Barthelemy', _c2=u'49'), Row(_c0=u'Saint Barthelemy', _c1=u'United States', _c2=u'49'), Row(_c0=u'Barbados', _c1=u'United States', _c2=u'121'), Row(_c0=u'United States', _c1=u'Azerbaijan', _c2=u'1'), Row(_c0=u'United States', _c1=u'Turkey', _c2=u'89'), Row(_c0=u'Germany', _c1=u'United States', _c2=u'1404'), Row(_c0=u'Kyrgyzstan', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'South Korea', _c2=u'703'), Row(_c0=u'United States', _c1=u'El Salvador', _c2=u'465'), Row(_c0=u'Ireland', _c1=u'United States', _c2=u'255'), Row(_c0=u'United States', _c1=u'Panama', _c2=u'393'), Row(_c0=u'United States', _c1=u'Ethiopia', _c2=u'12'), Row(_c0=u'United States', _c1=u'Thailand', _c2=u'6'), Row(_c0=u'United States', _c1=u'Aruba', _c2=u'332'), Row(_c0=u'United States', _c1=u'Turks and Caicos Islands', _c2=u'183'), Row(_c0=u'Croatia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Pakistan', _c2=u'16'), Row(_c0=u'United States', _c1=u'Honduras', _c2=u'372'), Row(_c0=u'Qatar', _c1=u'United States', _c2=u'56'), Row(_c0=u'Fiji', _c1=u'United States', _c2=u'28'), Row(_c0=u'Saint Kitts and Nevis', _c1=u'United States', _c2=u'109'), Row(_c0=u'Taiwan', _c1=u'United States', _c2=u'229'), Row(_c0=u'Haiti', _c1=u'United States', _c2=u'224'), Row(_c0=u'Kuwait', _c1=u'United States', _c2=u'26'), Row(_c0=u'Canada', _c1=u'United States', _c2=u'8034'), Row(_c0=u'Belarus', _c1=u'United States', _c2=u'1'), Row(_c0=u'Federated States of Micronesia', _c1=u'United States', _c2=u'54'), Row(_c0=u'Jamaica', _c1=u'United States', _c2=u'617'), Row(_c0=u'Dominican Republic', _c1=u'United States', _c2=u'1078'), Row(_c0=u'Japan', _c1=u'United States', _c2=u'1538'), Row(_c0=u'United States', _c1=u'Saint Vincent and the Grenadines', _c2=u'11'), Row(_c0=u'Finland', _c1=u'United States', _c2=u'22'), Row(_c0=u'United States', _c1=u'Ukraine', _c2=u'13'), Row(_c0=u'United States', _c1=u'Guadeloupe', _c2=u'34'), Row(_c0=u'United States', _c1=u'France', _c2=u'840'), Row(_c0=u'United States', _c1=u'Norway', _c2=u'33'), Row(_c0=u'Aruba', _c1=u'United States', _c2=u'349'), Row(_c0=u'French Guiana', _c1=u'United States', _c2=u'8'), Row(_c0=u'United States', _c1=u'Kiribati', _c2=u'26'), Row(_c0=u'India', _c1=u'United States', _c2=u'61'), Row(_c0=u'British Virgin Islands', _c1=u'United States', _c2=u'83'), Row(_c0=u'Brazil', _c1=u'United States', _c2=u'979'), Row(_c0=u'United States', _c1=u'Germany', _c2=u'1413'), Row(_c0=u'United States', _c1=u'New Zealand', _c2=u'65'), Row(_c0=u'United States', _c1=u'Cambodia', _c2=u'1'), Row(_c0=u'French Polynesia', _c1=u'United States', _c2=u'39'), Row(_c0=u'United Arab Emirates', _c1=u'United States', _c2=u'188'), Row(_c0=u'Singapore', _c1=u'United States', _c2=u'26'), Row(_c0=u'United States', _c1=u'Mexico', _c2=u'5974'), Row(_c0=u'Netherlands', _c1=u'United States', _c2=u'640'), Row(_c0=u'United States', _c1=u'Sweden', _c2=u'54'), Row(_c0=u'United States', _c1=u'Martinique', _c2=u'17'), Row(_c0=u'United States', _c1=u'United Arab Emirates', _c2=u'176'), Row(_c0=u'China', _c1=u'United States', _c2=u'509'), Row(_c0=u'United States', _c1=u'Philippines', _c2=u'112'), Row(_c0=u'Denmark', _c1=u'United States', _c2=u'83'), Row(_c0=u'United States', _c1=u'Nicaragua', _c2=u'183'), Row(_c0=u'Oman', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Belgium', _c2=u'275'), Row(_c0=u'Argentina', _c1=u'United States', _c2=u'208'), Row(_c0=u'Peru', _c1=u'United States', _c2=u'249'), Row(_c0=u'Cayman Islands', _c1=u'United States', _c2=u'258'), Row(_c0=u'South Africa', _c1=u'United States', _c2=u'24'), Row(_c0=u'United States', _c1=u'Argentina', _c2=u'170'), Row(_c0=u'United States', _c1=u'Iceland', _c2=u'150'), Row(_c0=u'Cameroon', _c1=u'United States', _c2=u'1'), Row(_c0=u'Spain', _c1=u'United States', _c2=u'390'), Row(_c0=u'Bermuda', _c1=u'United States', _c2=u'190'), Row(_c0=u'United States', _c1=u'Austria', _c2=u'31'), Row(_c0=u'United States', _c1=u'Nigeria', _c2=u'44'), Row(_c0=u'United States', _c1=u'Bonaire, Sint Eustatius, and Saba', _c2=u'44'), Row(_c0=u'Kiribati', _c1=u'United States', _c2=u'26'), Row(_c0=u'Saudi Arabia', _c1=u'United States', _c2=u'72'), Row(_c0=u'Czech Republic', _c1=u'United States', _c2=u'15'), Row(_c0=u'Macau', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Bahrain', _c2=u'2'), Row(_c0=u'Belgium', _c1=u'United States', _c2=u'352'), Row(_c0=u'United States', _c1=u'Israel', _c2=u'117'), Row(_c0=u'United States', _c1=u'Saint Lucia', _c2=u'84'), Row(_c0=u'Sierra Leone', _c1=u'United States', _c2=u'1'), Row(_c0=u'Afghanistan', _c1=u'United States', _c2=u'5'), Row(_c0=u'United States', _c1=u'British Virgin Islands', _c2=u'78'), Row(_c0=u'Curacao', _c1=u'United States', _c2=u'107'), Row(_c0=u'Georgia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Guyana', _c2=u'79'), Row(_c0=u'Philippines', _c1=u'United States', _c2=u'136'), Row(_c0=u'United States', _c1=u'Denmark', _c2=u'82'), Row(_c0=u'Grenada', _c1=u'United States', _c2=u'51'), Row(_c0=u'Cape Verde', _c1=u'United States', _c2=u'19'), Row(_c0=u'Ukraine', _c1=u'United States', _c2=u'14'), Row(_c0=u'United States', _c1=u'Papua New Guinea', _c2=u'2'), Row(_c0=u'Russia', _c1=u'United States', _c2=u'183'), Row(_c0=u'United States', _c1=u'Saudi Arabia', _c2=u'70'), Row(_c0=u'Guatemala', _c1=u'United States', _c2=u'413'), Row(_c0=u'Saint Lucia', _c1=u'United States', _c2=u'81'), Row(_c0=u'Paraguay', _c1=u'United States', _c2=u'85'), Row(_c0=u'United States', _c1=u'Curacao', _c2=u'96'), Row(_c0=u'United States', _c1=u'Taiwan', _c2=u'214'), Row(_c0=u'Tunisia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'South Africa', _c2=u'29'), Row(_c0=u'Turkey', _c1=u'United States', _c2=u'94'), Row(_c0=u'United Kingdom', _c1=u'United States', _c2=u'1852'), Row(_c0=u'Solomon Islands', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Greenland', _c2=u'1'), Row(_c0=u'United States', _c1=u'Spain', _c2=u'393'), Row(_c0=u'United States', _c1=u'Italy', _c2=u'377'), Row(_c0=u'Cuba', _c1=u'United States', _c2=u'340'), Row(_c0=u'United States', _c1=u'Switzerland', _c2=u'282'), Row(_c0=u'Dominica', _c1=u'United States', _c2=u'26'), Row(_c0=u'United States', _c1=u'Japan', _c2=u'1451'), Row(_c0=u'Portugal', _c1=u'United States', _c2=u'112'), Row(_c0=u'Bahrain', _c1=u'United States', _c2=u'65'), Row(_c0=u'United States', _c1=u'Brazil', _c2=u'567'), Row(_c0=u'United States', _c1=u'Peru', _c2=u'292'), Row(_c0=u'Vietnam', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'United Kingdom', _c2=u'1713'), Row(_c0=u'United States', _c1=u'Belize', _c2=u'108'), Row(_c0=u'Belize', _c1=u'United States', _c2=u'113'), Row(_c0=u'United States', _c1=u'Ghana', _c2=u'31'), Row(_c0=u'Mauritania', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Fiji', _c2=u'26'), Row(_c0=u'United States', _c1=u'Canada', _c2=u'8097'), Row(_c0=u'United States', _c1=u'French Polynesia', _c2=u'38'), Row(_c0=u'United States', _c1=u'Antigua and Barbuda', _c2=u'146'), Row(_c0=u'Nicaragua', _c1=u'United States', _c2=u'174'), Row(_c0=u'United States', _c1=u'Latvia', _c2=u'14'), Row(_c0=u'United States', _c1=u'Dominica', _c2=u'25'), Row(_c0=u'United States', _c1=u'Czech Republic', _c2=u'13'), Row(_c0=u'United States', _c1=u'Australia', _c2=u'211'), Row(_c0=u'United States', _c1=u'Cook Islands', _c2=u'12'), Row(_c0=u'Austria', _c1=u'United States', _c2=u'34'), Row(_c0=u'Jordan', _c1=u'United States', _c2=u'41'), Row(_c0=u'Palau', _c1=u'United States', _c2=u'35'), Row(_c0=u'United States', _c1=u'Equatorial Guinea', _c2=u'4'), Row(_c0=u'South Korea', _c1=u'United States', _c2=u'819'), Row(_c0=u'Angola', _c1=u'United States', _c2=u'12'), Row(_c0=u'Ghana', _c1=u'United States', _c2=u'30'), Row(_c0=u'New Caledonia', _c1=u'United States', _c2=u'1'), Row(_c0=u'Guadeloupe', _c1=u'United States', _c2=u'36'), Row(_c0=u'France', _c1=u'United States', _c2=u'818'), Row(_c0=u'Poland', _c1=u'United States', _c2=u'38'), Row(_c0=u'Nigeria', _c1=u'United States', _c2=u'57'), Row(_c0=u'United States', _c1=u'Uruguay', _c2=u'17'), Row(_c0=u'Greenland', _c1=u'United States', _c2=u'1'), Row(_c0=u'Chile', _c1=u'United States', _c2=u'178'), Row(_c0=u'United States', _c1=u'Bermuda', _c2=u'194'), Row(_c0=u'United States', _c1=u'Cuba', _c2=u'341'), Row(_c0=u'United States', _c1=u'Colombia', _c2=u'806'), Row(_c0=u'United States', _c1=u'Barbados', _c2=u'109'), Row(_c0=u'United States', _c1=u'Qatar', _c2=u'56'), Row(_c0=u'Australia', _c1=u'United States', _c2=u'277'), Row(_c0=u'United States', _c1=u'Cayman Islands', _c2=u'247'), Row(_c0=u'United States', _c1=u'Jordan', _c2=u'43'), Row(_c0=u'United States', _c1=u'Trinidad and Tobago', _c2=u'213'), Row(_c0=u'United States', _c1=u'Bolivia', _c2=u'21'), Row(_c0=u'Uruguay', _c1=u'United States', _c2=u'53'), Row(_c0=u'Cook Islands', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Saint Kitts and Nevis', _c2=u'124'), Row(_c0=u'Bulgaria', _c1=u'United States', _c2=u'6'), Row(_c0=u'United States', _c1=u'French Guiana', _c2=u'1'), Row(_c0=u'United States', _c1=u'Haiti', _c2=u'234'), Row(_c0=u'Bonaire, Sint Eustatius, and Saba', _c1=u'United States', _c2=u'46'), Row(_c0=u'Greece', _c1=u'United States', _c2=u'17'), Row(_c0=u'DEST_COUNTRY_NAME', _c1=u'ORIGIN_COUNTRY_NAME', _c2=u'count'), Row(_c0=u'United States', _c1=u'Saint Martin', _c2=u'1'), Row(_c0=u'United States', _c1=u'Romania', _c2=u'12'), Row(_c0=u'United States', _c1=u'Croatia', _c2=u'2'), Row(_c0=u'United States', _c1=u'Ireland', _c2=u'291'), Row(_c0=u'United States', _c1=u'India', _c2=u'62'), Row(_c0=u'Egypt', _c1=u'United States', _c2=u'11'), Row(_c0=u'United States', _c1=u'Grenada', _c2=u'47'), Row(_c0=u'Costa Rica', _c1=u'United States', _c2=u'529'), Row(_c0=u'Senegal', _c1=u'United States', _c2=u'35'), Row(_c0=u'United States', _c1=u'Sint Maarten', _c2=u'290'), Row(_c0=u'Guyana', _c1=u'United States', _c2=u'52'), Row(_c0=u'United States', _c1=u'Marshall Islands', _c2=u'35'), Row(_c0=u'Malta', _c1=u'United States', _c2=u'2'), Row(_c0=u'Malawi', _c1=u'United States', _c2=u'1'), Row(_c0=u'Bolivia', _c1=u'United States', _c2=u'33'), Row(_c0=u'Anguilla', _c1=u'United States', _c2=u'34'), Row(_c0=u'Algeria', _c1=u'United States', _c2=u'9'), Row(_c0=u'United States', _c1=u'Paraguay', _c2=u'14'), Row(_c0=u'Gibraltar', _c1=u'United States', _c2=u'1'), Row(_c0=u'Turks and Caicos Islands', _c1=u'United States', _c2=u'193'), Row(_c0=u'Saint Vincent and the Grenadines', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Russia', _c2=u'151'), Row(_c0=u'Italy', _c1=u'United States', _c2=u'366'), Row(_c0=u'Pakistan', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'Federated States of Micronesia', _c2=u'71'), Row(_c0=u'Iceland', _c1=u'United States', _c2=u'150'), Row(_c0=u'United States', _c1=u'Netherlands', _c2=u'702'), Row(_c0=u'Marshall Islands', _c1=u'United States', _c2=u'46'), Row(_c0=u'Luxembourg', _c1=u'United States', _c2=u'161'), Row(_c0=u'Honduras', _c1=u'United States', _c2=u'411'), Row(_c0=u'The Bahamas', _c1=u'United States', _c2=u'950'), Row(_c0=u'El Salvador', _c1=u'United States', _c2=u'572'), Row(_c0=u'United States', _c1=u'Senegal', _c2=u'28'), Row(_c0=u'Samoa', _c1=u'United States', _c2=u'24'), Row(_c0=u'United States', _c1=u'Angola', _c2=u'12'), Row(_c0=u'Kazakhstan', _c1=u'United States', _c2=u'1'), Row(_c0=u'Switzerland', _c1=u'United States', _c2=u'302'), Row(_c0=u'United States', _c1=u'Anguilla', _c2=u'35'), Row(_c0=u'Sint Maarten', _c1=u'United States', _c2=u'290'), Row(_c0=u'Hong Kong', _c1=u'United States', _c2=u'338'), Row(_c0=u'United States', _c1=u'Congo (Brazaville)', _c2=u'1'), Row(_c0=u'Latvia', _c1=u'United States', _c2=u'40'), Row(_c0=u'Trinidad and Tobago', _c1=u'United States', _c2=u'188'), Row(_c0=u'United States', _c1=u'Ecuador', _c2=u'326'), Row(_c0=u'Slovakia', _c1=u'United States', _c2=u'1'), Row(_c0=u'Suriname', _c1=u'United States', _c2=u'10'), Row(_c0=u'Mexico', _c1=u'United States', _c2=u'6427'), Row(_c0=u'Ecuador', _c1=u'United States', _c2=u'256'), Row(_c0=u'United States', _c1=u'Portugal', _c2=u'122'), Row(_c0=u'United States', _c1=u'Guatemala', _c2=u'327'), Row(_c0=u'United States', _c1=u'Costa Rica', _c2=u'560'), Row(_c0=u'United States', _c1=u'Suriname', _c2=u'27'), Row(_c0=u'Colombia', _c1=u'United States', _c2=u'872'), Row(_c0=u'United States', _c1=u'Cape Verde', _c2=u'16'), Row(_c0=u'United States', _c1=u'Jamaica', _c2=u'714'), Row(_c0=u'Norway', _c1=u'United States', _c2=u'86'), Row(_c0=u'United States', _c1=u'Morocco', _c2=u'15'), Row(_c0=u'Venezuela', _c1=u'United States', _c2=u'335'), Row(_c0=u'United States', _c1=u'Samoa', _c2=u'25'), Row(_c0=u'United States', _c1=u'Palau', _c2=u'38'), Row(_c0=u'United States', _c1=u'Venezuela', _c2=u'258'), Row(_c0=u'Panama', _c1=u'United States', _c2=u'456'), Row(_c0=u'United States', _c1=u'Chile', _c2=u'168'), Row(_c0=u'United States', _c1=u'Finland', _c2=u'19'), Row(_c0=u'Antigua and Barbuda', _c1=u'United States', _c2=u'115'), Row(_c0=u'Morocco', _c1=u'United States', _c2=u'18'), Row(_c0=u'United States', _c1=u'Greece', _c2=u'19'), Row(_c0=u'Azerbaijan', _c1=u'United States', _c2=u'7'), Row(_c0=u'United States', _c1=u'The Bahamas', _c2=u'991'), Row(_c0=u'New Zealand', _c1=u'United States', _c2=u'114'), Row(_c0=u'Liberia', _c1=u'United States', _c2=u'3'), Row(_c0=u'United States', _c1=u'Hong Kong', _c2=u'381'), Row(_c0=u'Hungary', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Tunisia', _c2=u'1'), Row(_c0=u'United States', _c1=u'China', _c2=u'767'), Row(_c0=u'Burkina Faso', _c1=u'United States', _c2=u'2'), Row(_c0=u'Sweden', _c1=u'United States', _c2=u'94'), Row(_c0=u'United States', _c1=u'Kuwait', _c2=u'24'), Row(_c0=u'United States', _c1=u'Dominican Republic', _c2=u'1282'), Row(_c0=u'United States', _c1=u'Egypt', _c2=u'11'), Row(_c0=u'Israel', _c1=u'United States', _c2=u'108'), Row(_c0=u'United States', _c1=u'United States', _c2=u'358354'), Row(_c0=u'United States', _c1=u'Luxembourg', _c2=u'115'), Row(_c0=u'Ethiopia', _c1=u'United States', _c2=u'11'), Row(_c0=u'United States', _c1=u'Poland', _c2=u'33'), Row(_c0=u'Martinique', _c1=u'United States', _c2=u'31'), Row(_c0=u'United States', _c1=u'Saint Barthelemy', _c2=u'53'), Row(_c0=u'Saint Barthelemy', _c1=u'United States', _c2=u'53'), Row(_c0=u'United States', _c1=u'Turkey', _c2=u'92'), Row(_c0=u'Barbados', _c1=u'United States', _c2=u'102'), Row(_c0=u'United States', _c1=u'Kazakhstan', _c2=u'1'), Row(_c0=u'United States', _c1=u'Azerbaijan', _c2=u'5'), Row(_c0=u'Germany', _c1=u'United States', _c2=u'1391'), Row(_c0=u'United States', _c1=u'South Korea', _c2=u'754'), Row(_c0=u'United States', _c1=u'El Salvador', _c2=u'486'), Row(_c0=u'Ireland', _c1=u'United States', _c2=u'267'), Row(_c0=u'United States', _c1=u'Hungary', _c2=u'1'), Row(_c0=u'Malaysia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'Panama', _c2=u'460'), Row(_c0=u'United States', _c1=u'Aruba', _c2=u'348'), Row(_c0=u'United States', _c1=u'Ethiopia', _c2=u'11'), Row(_c0=u'United States', _c1=u'Turks and Caicos Islands', _c2=u'204'), Row(_c0=u'United States', _c1=u'Pakistan', _c2=u'12'), Row(_c0=u'United States', _c1=u'Honduras', _c2=u'412'), Row(_c0=u'Fiji', _c1=u'United States', _c2=u'25'), Row(_c0=u'Qatar', _c1=u'United States', _c2=u'95'), Row(_c0=u'Saint Kitts and Nevis', _c1=u'United States', _c2=u'118'), Row(_c0=u'Haiti', _c1=u'United States', _c2=u'201'), Row(_c0=u'Taiwan', _c1=u'United States', _c2=u'265'), Row(_c0=u'Kuwait', _c1=u'United States', _c2=u'24'), Row(_c0=u'Canada', _c1=u'United States', _c2=u'7974'), Row(_c0=u'Federated States of Micronesia', _c1=u'United States', _c2=u'60'), Row(_c0=u'Jamaica', _c1=u'United States', _c2=u'673'), Row(_c0=u'United States', _c1=u'Malta', _c2=u'2'), Row(_c0=u'Dominican Republic', _c1=u'United States', _c2=u'1230'), Row(_c0=u'Japan', _c1=u'United States', _c2=u'1591'), Row(_c0=u'United States', _c1=u'Saint Vincent and the Grenadines', _c2=u'3'), Row(_c0=u'Finland', _c1=u'United States', _c2=u'18'), Row(_c0=u'United States', _c1=u'Ukraine', _c2=u'1'), Row(_c0=u'United States', _c1=u'Guadeloupe', _c2=u'47'), Row(_c0=u'United States', _c1=u'France', _c2=u'960'), Row(_c0=u'Aruba', _c1=u'United States', _c2=u'351'), Row(_c0=u'United States', _c1=u'Norway', _c2=u'87'), Row(_c0=u'French Guiana', _c1=u'United States', _c2=u'11'), Row(_c0=u'United States', _c1=u'Kiribati', _c2=u'27'), Row(_c0=u'India', _c1=u'United States', _c2=u'61'), Row(_c0=u'British Virgin Islands', _c1=u'United States', _c2=u'108'), Row(_c0=u'Brazil', _c1=u'United States', _c2=u'927'), Row(_c0=u'United States', _c1=u'Germany', _c2=u'1343'), Row(_c0=u'United States', _c1=u'New Zealand', _c2=u'77'), Row(_c0=u'United States', _c1=u'Cambodia', _c2=u'1'), Row(_c0=u'French Polynesia', _c1=u'United States', _c2=u'39'), Row(_c0=u'United Arab Emirates', _c1=u'United States', _c2=u'247'), Row(_c0=u'United States', _c1=u'Mexico', _c2=u'6490'), Row(_c0=u'Netherlands', _c1=u'United States', _c2=u'773'), Row(_c0=u'United States', _c1=u'Sweden', _c2=u'101'), Row(_c0=u'United States', _c1=u'Martinique', _c2=u'32'), Row(_c0=u'United States', _c1=u'United Arab Emirates', _c2=u'226'), Row(_c0=u'United States', _c1=u'Bulgaria', _c2=u'1'), Row(_c0=u'Denmark', _c1=u'United States', _c2=u'114'), Row(_c0=u'China', _c1=u'United States', _c2=u'653'), Row(_c0=u'United States', _c1=u'Nicaragua', _c2=u'170'), Row(_c0=u'United States', _c1=u'Philippines', _c2=u'116'), Row(_c0=u'United States', _c1=u'Belgium', _c2=u'230'), Row(_c0=u'Peru', _c1=u'United States', _c2=u'277'), Row(_c0=u'Argentina', _c1=u'United States', _c2=u'195'), Row(_c0=u'Cayman Islands', _c1=u'United States', _c2=u'283'), Row(_c0=u'South Africa', _c1=u'United States', _c2=u'32'), Row(_c0=u'United States', _c1=u'Argentina', _c2=u'153'), Row(_c0=u'United States', _c1=u'Iceland', _c2=u'177'), Row(_c0=u'Chad', _c1=u'United States', _c2=u'1'), Row(_c0=u'Spain', _c1=u'United States', _c2=u'388'), Row(_c0=u'Bermuda', _c1=u'United States', _c2=u'185'), Row(_c0=u'United States', _c1=u'Nigeria', _c2=u'43'), Row(_c0=u'United States', _c1=u'Austria', _c2=u'46'), Row(_c0=u'United States', _c1=u'Bonaire, Sint Eustatius, and Saba', _c2=u'63'), Row(_c0=u'Kiribati', _c1=u'United States', _c2=u'26'), Row(_c0=u'Saudi Arabia', _c1=u'United States', _c2=u'79'), Row(_c0=u'Czech Republic', _c1=u'United States', _c2=u'11'), Row(_c0=u'Macau', _c1=u'United States', _c2=u'3'), Row(_c0=u'Belgium', _c1=u'United States', _c2=u'259'), Row(_c0=u'United States', _c1=u'Israel', _c2=u'112'), Row(_c0=u'United States', _c1=u'Saint Lucia', _c2=u'109'), Row(_c0=u'United States', _c1=u'British Virgin Islands', _c2=u'101'), Row(_c0=u'Curacao', _c1=u'United States', _c2=u'74'), Row(_c0=u'United States', _c1=u'Denmark', _c2=u'116'), Row(_c0=u'United States', _c1=u'Guyana', _c2=u'55'), Row(_c0=u'Philippines', _c1=u'United States', _c2=u'134'), Row(_c0=u'Grenada', _c1=u'United States', _c2=u'43'), Row(_c0=u'Cape Verde', _c1=u'United States', _c2=u'24'), Row(_c0=u'Ukraine', _c1=u'United States', _c2=u'11'), Row(_c0=u'Russia', _c1=u'United States', _c2=u'213'), Row(_c0=u'United States', _c1=u'Saudi Arabia', _c2=u'74'), Row(_c0=u'Guatemala', _c1=u'United States', _c2=u'383'), Row(_c0=u'Saint Lucia', _c1=u'United States', _c2=u'107'), Row(_c0=u'Paraguay', _c1=u'United States', _c2=u'90'), Row(_c0=u'United States', _c1=u'Curacao', _c2=u'77'), Row(_c0=u'United States', _c1=u'Taiwan', _c2=u'240'), Row(_c0=u'Tunisia', _c1=u'United States', _c2=u'2'), Row(_c0=u'United States', _c1=u'South Africa', _c2=u'32'), Row(_c0=u'Turkey', _c1=u'United States', _c2=u'91'), Row(_c0=u'United Kingdom', _c1=u'United States', _c2=u'1912'), Row(_c0=u'Romania', _c1=u'United States', _c2=u'11'), Row(_c0=u'United States', _c1=u'Greenland', _c2=u'1'), Row(_c0=u'United States', _c1=u'Spain', _c2=u'424'), Row(_c0=u'Cuba', _c1=u'United States', _c2=u'417'), Row(_c0=u'United States', _c1=u'Italy', _c2=u'385'), Row(_c0=u'United States', _c1=u'Switzerland', _c2=u'300'), Row(_c0=u'Dominica', _c1=u'United States', _c2=u'25'), Row(_c0=u'United States', _c1=u'Japan', _c2=u'1501'), Row(_c0=u'Portugal', _c1=u'United States', _c2=u'124'), Row(_c0=u'United States', _c1=u'Brazil', _c2=u'578'), Row(_c0=u'Bahrain', _c1=u'United States', _c2=u'41'), Row(_c0=u'United States', _c1=u'Peru', _c2=u'315'), Row(_c0=u'Indonesia', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'United Kingdom', _c2=u'1812'), Row(_c0=u'United States', _c1=u'Belize', _c2=u'143'), Row(_c0=u'Belize', _c1=u'United States', _c2=u'142'), Row(_c0=u'United States', _c1=u'Ghana', _c2=u'15'), Row(_c0=u'Mauritania', _c1=u'United States', _c2=u'1'), Row(_c0=u'United States', _c1=u'Indonesia', _c2=u'1'), Row(_c0=u'United States', _c1=u'Fiji', _c2=u'27'), Row(_c0=u'United States', _c1=u'Canada', _c2=u'8177'), Row(_c0=u'United States', _c1=u'Antigua and Barbuda', _c2=u'112'), Row(_c0=u'United States', _c1=u'French Polynesia', _c2=u'40'), Row(_c0=u'Nicaragua', _c1=u'United States', _c2=u'168'), Row(_c0=u'United States', _c1=u'Latvia', _c2=u'13'), Row(_c0=u'United States', _c1=u'Dominica', _c2=u'36'), Row(_c0=u'United States', _c1=u'Czech Republic', _c2=u'11'), Row(_c0=u'United States', _c1=u'Cook Islands', _c2=u'12'), Row(_c0=u'United States', _c1=u'Australia', _c2=u'235'), Row(_c0=u'Austria', _c1=u'United States', _c2=u'47'), Row(_c0=u'Jordan', _c1=u'United States', _c2=u'65'), Row(_c0=u'Palau', _c1=u'United States', _c2=u'38'), Row(_c0=u'South Korea', _c1=u'United States', _c2=u'968'), Row(_c0=u'Angola', _c1=u'United States', _c2=u'13'), Row(_c0=u'Ghana', _c1=u'United States', _c2=u'13'), Row(_c0=u'Guadeloupe', _c1=u'United States', _c2=u'43'), Row(_c0=u'France', _c1=u'United States', _c2=u'966'), Row(_c0=u'Poland', _c1=u'United States', _c2=u'35'), Row(_c0=u'Nigeria', _c1=u'United States', _c2=u'49'), Row(_c0=u'United States', _c1=u'Uruguay', _c2=u'18'), Row(_c0=u'Greenland', _c1=u'United States', _c2=u'2'), Row(_c0=u'Chile', _c1=u'United States', _c2=u'156'), Row(_c0=u'United States', _c1=u'Bermuda', _c2=u'190'), Row(_c0=u'United States', _c1=u'Cuba', _c2=u'419'), Row(_c0=u'United States', _c1=u'Qatar', _c2=u'96'), Row(_c0=u'United States', _c1=u'Colombia', _c2=u'888'), Row(_c0=u'United States', _c1=u'Barbados', _c2=u'89'), Row(_c0=u'Australia', _c1=u'United States', _c2=u'293'), Row(_c0=u'United States', _c1=u'Cayman Islands', _c2=u'278'), Row(_c0=u'United States', _c1=u'Jordan', _c2=u'64'), Row(_c0=u'United States', _c1=u'Trinidad and Tobago', _c2=u'175'), Row(_c0=u'United States', _c1=u'Bolivia', _c2=u'14'), Row(_c0=u'Uruguay', _c1=u'United States', _c2=u'60'), Row(_c0=u'Cook Islands', _c1=u'United States', _c2=u'12'), Row(_c0=u'United States', _c1=u'French Guiana', _c2=u'4'), Row(_c0=u'United States', _c1=u'Saint Kitts and Nevis', _c2=u'123'), Row(_c0=u'United States', _c1=u'Haiti', _c2=u'193'), Row(_c0=u'Bonaire, Sint Eustatius, and Saba', _c1=u'United States', _c2=u'62'), Row(_c0=u'Greece', _c1=u'United States', _c2=u'20')]]\n"}]},"apps":[],"jobName":"paragraph_1535665216847_-61010821","id":"20180828-005922_948314611","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:330"},{"text":"%pyspark\nfrom itertools import chain\nfrom pyspark.sql import Row\ntfl = sqlContext.read.json(\"gs://de-training-input/alimazon/200000/stock-orders/*\")\n#tfl.show()\n\n    \nprint(\"Number of partitions: {}\".format(tfl.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(tfl.rdd.partitioner))\n\npartitions = tfl.rdd.mapPartitions(lambda part: [Row(value=len(list(part)))])\nspark.createDataFrame(partitions).show()\n\nspark.createDataFrame(partitions).repartition(1).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/default-partitions\")","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Number of partitions: 5\nPartitioner: None\n+------+\n| value|\n+------+\n|155000|\n|155000|\n|155000|\n|155000|\n| 60002|\n+------+\n\n"}]},"apps":[],"jobName":"paragraph_1535665216853_-52546345","id":"20180829-193410_469578007","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:331"},{"text":"%md\nPartition the dataset by `client_id` and write the size of the partitions in the folder: \n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Partition the dataset by <code>client_id</code> and write the size of the partitions in the folder:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216854_-51392098","id":"20180829-194422_1654749293","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:332"},{"text":"%pyspark\ntfl2= tfl.repartition(\"id\")\n    \nprint(\"\\nAfter 'repartition()' with column 'id'\")\nprint(\"Number of partitions: {}\".format(tfl2.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(tfl2.rdd.partitioner))\npartitions2 = tfl2.rdd.mapPartitions(lambda part: [Row(value=len(list(part)))])\nspark.createDataFrame(partitions2).show()\nspark.createDataFrame(partitions).repartition(1).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/client_id-partitions\")","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAfter 'repartition()' with column 'id'\nNumber of partitions: 200\nPartitioner: None\n+-----+\n|value|\n+-----+\n| 3380|\n| 3339|\n| 3363|\n| 3295|\n| 3370|\n| 3499|\n| 3316|\n| 3404|\n| 3444|\n| 3402|\n| 3438|\n| 3384|\n| 3340|\n| 3484|\n| 3381|\n| 3366|\n| 3385|\n| 3380|\n| 3473|\n| 3398|\n+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1535665216855_-51776847","id":"20180829-194420_1982782501","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:333"},{"text":"%md\nPartition the dataset by `15 partitions` and write the size of the partitions in the folder: ","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Partition the dataset by <code>15 partitions</code> and write the size of the partitions in the folder:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216855_-51776847","id":"20180829-195030_131129033","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:334"},{"text":"%pyspark\ntfl3=tfl.repartition(15)\nprint(\"\\nAfter 'repartition()' with column '15'\")\nprint(\"Number of partitions: {}\".format(tfl3.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(tfl3.rdd.partitioner))\npartitions3 = tfl3.rdd.mapPartitions(lambda part: [Row(value=len(list(part)))])\nspark.createDataFrame(partitions3).show()\nspark.createDataFrame(partitions).repartition(1).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/fifteen-partitions\")","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAfter 'repartition()' with column '15'\nNumber of partitions: 15\nPartitioner: None\n+-----+\n|value|\n+-----+\n|43047|\n|43048|\n|43048|\n|43049|\n|43048|\n|43047|\n|43045|\n|43045|\n|43045|\n|43045|\n|43045|\n|43045|\n|43045|\n|43045|\n|43046|\n+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1535665216855_-51776847","id":"20180829-195109_1050579606","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:335"},{"text":"%md\nPartition the dataset by` 15 partition` and` client_id` and write the size of the partitions in the ","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Partition the dataset by<code>15 partition</code> and<code>client_id</code> and write the size of the partitions in the</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216855_-51776847","id":"20180829-195352_839304936","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:336"},{"text":"%pyspark\ntfl4=tfl.repartition(\"id\")\nprint(\"Number of partitions: {}\".format(tfl4.rdd.getNumPartitions()))\ntfl4=tfl4.coalesce(15)\n\nprint(\"\\nAfter 'repartition()' with column '15'\")\nprint(\"Number of partitions: {}\".format(tfl4.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(tfl4.rdd.partitioner))\npartitions4 = tfl4.rdd.mapPartitions(lambda part: [Row(value=len(list(part)))])\nspark.createDataFrame(partitions4).show()\nspark.createDataFrame(partitions).repartition(1).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/fifteen-client_id-partitions\")","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Number of partitions: 200\n\nAfter 'repartition()' with column '15'\nNumber of partitions: 15\nPartitioner: None\n+-----+\n|value|\n+-----+\n|43974|\n|44294|\n|47463|\n|44292|\n|44337|\n|47597|\n|44231|\n|44023|\n|47468|\n|44347|\n|43957|\n|47651|\n|44397|\n|44149|\n|47822|\n+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1535665216856_-53700591","id":"20180829-195327_964901611","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:337"},{"text":"%md\nPartition the dataset by `15 partition` and` product_id` and `month` and write the size of the\n","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","results":{},"enabled":true,"editorSetting":{"language":"markdown","editOnDblClick":true}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Partition the dataset by <code>15 partition</code> and<code>product_id</code> and <code>month</code> and write the size of the</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1535665216857_-54085340","id":"20180829-200815_933190512","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:338"},{"text":"%pyspark\nfrom pyspark.sql.functions import col\nfrom pyspark import SparkContext\nfrom pyspark.sql import SQLContext\nfrom pyspark.sql.functions import to_timestamp\nfrom pyspark.sql.functions import *\nfrom pyspark.sql.window import Window\n\n\ntfl5=tfl.withColumn(\"parsed1\", substring(\"timestamp\",0,10)).withColumn(\"parsed\", to_date(\"parsed1\", \"yyyy-MM-dd\")).withColumn(\"month\", month(\"parsed\"))\ntfl5=tfl5.repartition(\"product_id\",\"month\")\nprint(\"Number of partitions: {}\".format(tfl5.rdd.getNumPartitions()))\ntfl5=tfl5.coalesce(15)\n\nprint(\"\\nAfter 'repartition()' with column '15'\")\nprint(\"Number of partitions: {}\".format(tfl5.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(tfl5.rdd.partitioner))\npartitions5 = tfl5.rdd.mapPartitions(lambda part: [Row(value=len(list(part)))])\nspark.createDataFrame(partitions5).show()\nspark.createDataFrame(partitions).repartition(1).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/fifteen-product_id-month-partitions\")","dateUpdated":"2018-08-30T21:40:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Number of partitions: 200\n\nAfter 'repartition()' with column '15'\nNumber of partitions: 15\nPartitioner: None\n+-----+\n|value|\n+-----+\n|44582|\n|45051|\n|47635|\n|43832|\n|43956|\n|47473|\n|45355|\n|45178|\n|47458|\n|44275|\n|44192|\n|46234|\n|43554|\n|43816|\n|47411|\n+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1535665216857_-54085340","id":"20180829-200903_1853361578","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:339"},{"text":"%pyspark\nfrom itertools import chain\nfrom pyspark.sql import Row\ntfl = sqlContext.read.json(\"gs://de-training-input/alimazon/200000/stock-orders/*\")\n#tfl.show()\nprint(\"Number of partitions: {}\".format(tfl.rdd.getNumPartitions()))\nprint(\"Partitioner: {}\".format(tfl.rdd.partitioner))\n    \n\ntfl.repartition(10).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/10-files\")","user":"anonymous","dateUpdated":"2018-08-30T21:45:34+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Number of partitions: 5\nPartitioner: None\n"}]},"apps":[],"jobName":"paragraph_1535665236570_1898946049","id":"20180830-214036_410400796","dateCreated":"2018-08-30T21:40:36+0000","dateStarted":"2018-08-30T21:45:34+0000","dateFinished":"2018-08-30T21:46:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:340"},{"text":"%pyspark\ntfl.repartition(150).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/150-files\")","user":"anonymous","dateUpdated":"2018-08-30T21:48:54+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535665712159_-694772169","id":"20180830-214832_1575550601","dateCreated":"2018-08-30T21:48:32+0000","dateStarted":"2018-08-30T21:48:54+0000","dateFinished":"2018-08-30T21:51:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:341"},{"text":"%pyspark\ntfl.repartition(800).write.mode('overwrite').csv(\"gs://de-training-output-topifloresl/assignment-5/800-files\")","user":"anonymous","dateUpdated":"2018-08-30T21:58:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1535666264354_61822602","id":"20180830-215744_574163843","dateCreated":"2018-08-30T21:57:44+0000","dateStarted":"2018-08-30T21:58:02+0000","dateFinished":"2018-08-30T22:07:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:342"},{"text":"","dateUpdated":"2018-08-30T21:40:16+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1535665216858_-52931094","id":"20180824-163954_1813225578","dateCreated":"2018-08-30T21:40:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:343"}],"name":"Spark Data Partitioning","id":"2DNN96N3J","angularObjects":{"2DNEKUWQ5:shared_process":[],"2DQ93JVXG:shared_process":[],"2DQJXSQQ5:shared_process":[],"2DPCZU5U1:shared_process":[],"2DNCTHVKB:shared_process":[],"2DNZ6Z17S:shared_process":[],"2DQ86WRRZ:shared_process":[],"2DQXFY4UN:shared_process":[],"2DS4PXR2B:shared_process":[],"2DNNENYE3:shared_process":[],"2DRNV1UGZ:shared_process":[],"2DS1DNH89:shared_process":[],"2DP1Y732E:shared_process":[],"2DR2UGWHE:shared_process":[],"2DNSHJKS3:shared_process":[],"2DPQACT37:shared_process":[],"2DPCBHSZF:shared_process":[],"2DNS99D8A:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}